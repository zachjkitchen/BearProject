id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Varia
  commentId: N:Varia
  language: CSharp
  name:
    CSharp: Varia
    VB: Varia
  nameWithType:
    CSharp: Varia
    VB: Varia
  qualifiedName:
    CSharp: Varia
    VB: Varia
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Varia.VariaPreviewer
    commentId: T:Varia.VariaPreviewer
    language: CSharp
    name:
      CSharp: VariaPreviewer
      VB: VariaPreviewer
    nameWithType:
      CSharp: VariaPreviewer
      VB: VariaPreviewer
    qualifiedName:
      CSharp: Varia.VariaPreviewer
      VB: Varia.VariaPreviewer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaPreviewer
      path: ''
      startLine: 10
    summary: "\nUtility for automatically calling VariaUtils.Instantiate.\nThis is particularly useful in the editor to get a live preview of results.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class VariaPreviewer : MonoBehaviour'
        VB: >-
          Public Class VariaPreviewer

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaPreviewer.continuousRefresh
      commentId: F:Varia.VariaPreviewer.continuousRefresh
      language: CSharp
      name:
        CSharp: continuousRefresh
        VB: continuousRefresh
      nameWithType:
        CSharp: VariaPreviewer.continuousRefresh
        VB: VariaPreviewer.continuousRefresh
      qualifiedName:
        CSharp: Varia.VariaPreviewer.continuousRefresh
        VB: Varia.VariaPreviewer.continuousRefresh
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: continuousRefresh
        path: ''
        startLine: 15
      syntax:
        content:
          CSharp: public bool continuousRefresh
          VB: Public continuousRefresh As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaPreviewer.refreshInEditor
      commentId: F:Varia.VariaPreviewer.refreshInEditor
      language: CSharp
      name:
        CSharp: refreshInEditor
        VB: refreshInEditor
      nameWithType:
        CSharp: VariaPreviewer.refreshInEditor
        VB: VariaPreviewer.refreshInEditor
      qualifiedName:
        CSharp: Varia.VariaPreviewer.refreshInEditor
        VB: Varia.VariaPreviewer.refreshInEditor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: refreshInEditor
        path: ''
        startLine: 17
      syntax:
        content:
          CSharp: public bool refreshInEditor
          VB: Public refreshInEditor As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaPreviewer.refreshBufferTime
      commentId: F:Varia.VariaPreviewer.refreshBufferTime
      language: CSharp
      name:
        CSharp: refreshBufferTime
        VB: refreshBufferTime
      nameWithType:
        CSharp: VariaPreviewer.refreshBufferTime
        VB: VariaPreviewer.refreshBufferTime
      qualifiedName:
        CSharp: Varia.VariaPreviewer.refreshBufferTime
        VB: Varia.VariaPreviewer.refreshBufferTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: refreshBufferTime
        path: ''
        startLine: 19
      syntax:
        content:
          CSharp: public float refreshBufferTime
          VB: Public refreshBufferTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaPreviewer.seed
      commentId: F:Varia.VariaPreviewer.seed
      language: CSharp
      name:
        CSharp: seed
        VB: seed
      nameWithType:
        CSharp: VariaPreviewer.seed
        VB: VariaPreviewer.seed
      qualifiedName:
        CSharp: Varia.VariaPreviewer.seed
        VB: Varia.VariaPreviewer.seed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: seed
        path: ''
        startLine: 21
      syntax:
        content:
          CSharp: public int seed
          VB: Public seed As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaPreviewer.target
      commentId: F:Varia.VariaPreviewer.target
      language: CSharp
      name:
        CSharp: target
        VB: target
      nameWithType:
        CSharp: VariaPreviewer.target
        VB: VariaPreviewer.target
      qualifiedName:
        CSharp: Varia.VariaPreviewer.target
        VB: Varia.VariaPreviewer.target
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: target
        path: ''
        startLine: 23
      syntax:
        content:
          CSharp: public GameObject target
          VB: Public target As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaPreviewer.Refresh
      commentId: M:Varia.VariaPreviewer.Refresh
      language: CSharp
      name:
        CSharp: Refresh()
        VB: Refresh()
      nameWithType:
        CSharp: VariaPreviewer.Refresh()
        VB: VariaPreviewer.Refresh()
      qualifiedName:
        CSharp: Varia.VariaPreviewer.Refresh()
        VB: Varia.VariaPreviewer.Refresh()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Refresh
        path: ''
        startLine: 45
      syntax:
        content:
          CSharp: public void Refresh()
          VB: Public Sub Refresh
      overload: Varia.VariaPreviewer.Refresh*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Varia.VariaPrototype
    commentId: T:Varia.VariaPrototype
    language: CSharp
    name:
      CSharp: VariaPrototype
      VB: VariaPrototype
    nameWithType:
      CSharp: VariaPrototype
      VB: VariaPrototype
    qualifiedName:
      CSharp: Varia.VariaPrototype
      VB: Varia.VariaPrototype
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaPrototype
      path: ''
      startLine: 85
    summary: "\nAdd this to any game objects with VariaBehaviours that you want to instantiate multiple times.\nIt disables all VariaBehaviour on this object and children, so it is pristine for copying.\nIt&apos;s not necessary for prefabs.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class VariaPrototype : MonoBehaviour'
        VB: >-
          Public Class VariaPrototype

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Varia.VariaBehaviour
    commentId: T:Varia.VariaBehaviour
    language: CSharp
    name:
      CSharp: VariaBehaviour
      VB: VariaBehaviour
    nameWithType:
      CSharp: VariaBehaviour
      VB: VariaBehaviour
    qualifiedName:
      CSharp: Varia.VariaBehaviour
      VB: Varia.VariaBehaviour
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaBehaviour
      path: ''
      startLine: 98
    summary: "\nBase class for all varia components that actually do something.\nSimply inherit, and override the Apply() method to make a new component.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class VariaBehaviour : MonoBehaviour'
        VB: >-
          Public MustInherit Class VariaBehaviour

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Varia.VariaBehaviour.conditionList
      commentId: F:Varia.VariaBehaviour.conditionList
      language: CSharp
      name:
        CSharp: conditionList
        VB: conditionList
      nameWithType:
        CSharp: VariaBehaviour.conditionList
        VB: VariaBehaviour.conditionList
      qualifiedName:
        CSharp: Varia.VariaBehaviour.conditionList
        VB: Varia.VariaBehaviour.conditionList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: conditionList
        path: ''
        startLine: 102
      syntax:
        content:
          CSharp: public VariaConditionList conditionList
          VB: Public conditionList As VariaConditionList
        return:
          type: Varia.VariaConditionList
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaBehaviour.OnEnable
      commentId: M:Varia.VariaBehaviour.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: VariaBehaviour.OnEnable()
        VB: VariaBehaviour.OnEnable()
      qualifiedName:
        CSharp: Varia.VariaBehaviour.OnEnable()
        VB: Varia.VariaBehaviour.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: OnEnable
        path: ''
        startLine: 104
      syntax:
        content:
          CSharp: protected void OnEnable()
          VB: Protected Sub OnEnable
      overload: Varia.VariaBehaviour.OnEnable*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Varia.VariaBehaviour.Apply(Varia.VariaContext)
      commentId: M:Varia.VariaBehaviour.Apply(Varia.VariaContext)
      language: CSharp
      name:
        CSharp: Apply(VariaContext)
        VB: Apply(VariaContext)
      nameWithType:
        CSharp: VariaBehaviour.Apply(VariaContext)
        VB: VariaBehaviour.Apply(VariaContext)
      qualifiedName:
        CSharp: Varia.VariaBehaviour.Apply(Varia.VariaContext)
        VB: Varia.VariaBehaviour.Apply(Varia.VariaContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Apply
        path: ''
        startLine: 123
      summary: "\nOverride this to control what happens when all the conditions are met\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Apply(VariaContext context)
          VB: Public Overridable Sub Apply(context As VariaContext)
        parameters:
        - id: context
          type: Varia.VariaContext
          description: ''
      overload: Varia.VariaBehaviour.Apply*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Varia.VariaBehaviour.NoApply(Varia.VariaContext)
      commentId: M:Varia.VariaBehaviour.NoApply(Varia.VariaContext)
      language: CSharp
      name:
        CSharp: NoApply(VariaContext)
        VB: NoApply(VariaContext)
      nameWithType:
        CSharp: VariaBehaviour.NoApply(VariaContext)
        VB: VariaBehaviour.NoApply(VariaContext)
      qualifiedName:
        CSharp: Varia.VariaBehaviour.NoApply(Varia.VariaContext)
        VB: Varia.VariaBehaviour.NoApply(Varia.VariaContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: NoApply
        path: ''
        startLine: 131
      summary: "\nOverride this to control what happens when a condition is missed\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void NoApply(VariaContext context)
          VB: Public Overridable Sub NoApply(context As VariaContext)
        parameters:
        - id: context
          type: Varia.VariaContext
          description: ''
      overload: Varia.VariaBehaviour.NoApply*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Varia.VariaDestroy
    commentId: T:Varia.VariaDestroy
    language: CSharp
    name:
      CSharp: VariaDestroy
      VB: VariaDestroy
    nameWithType:
      CSharp: VariaDestroy
      VB: VariaDestroy
    qualifiedName:
      CSharp: Varia.VariaDestroy
      VB: Varia.VariaDestroy
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaDestroy
      path: ''
      startLine: 148
    summary: "\nDestroys the game object.\nYou should add conditions to this component or it is mostly useless.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class VariaDestroy : VariaBehaviour'
        VB: >-
          Public Class VariaDestroy

              Inherits VariaBehaviour
    inheritance:
    - System.Object
    - Varia.VariaBehaviour
    inheritedMembers:
    - Varia.VariaBehaviour.conditionList
    - Varia.VariaBehaviour.OnEnable
    - Varia.VariaBehaviour.NoApply(Varia.VariaContext)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaDestroy.#ctor
      commentId: M:Varia.VariaDestroy.#ctor
      language: CSharp
      name:
        CSharp: VariaDestroy()
        VB: VariaDestroy()
      nameWithType:
        CSharp: VariaDestroy.VariaDestroy()
        VB: VariaDestroy.VariaDestroy()
      qualifiedName:
        CSharp: Varia.VariaDestroy.VariaDestroy()
        VB: Varia.VariaDestroy.VariaDestroy()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: .ctor
        path: ''
        startLine: 151
      syntax:
        content:
          CSharp: public VariaDestroy()
          VB: Public Sub New
      overload: Varia.VariaDestroy.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaDestroy.Apply(Varia.VariaContext)
      commentId: M:Varia.VariaDestroy.Apply(Varia.VariaContext)
      language: CSharp
      name:
        CSharp: Apply(VariaContext)
        VB: Apply(VariaContext)
      nameWithType:
        CSharp: VariaDestroy.Apply(VariaContext)
        VB: VariaDestroy.Apply(VariaContext)
      qualifiedName:
        CSharp: Varia.VariaDestroy.Apply(Varia.VariaContext)
        VB: Varia.VariaDestroy.Apply(Varia.VariaContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Apply
        path: ''
        startLine: 163
      syntax:
        content:
          CSharp: public override void Apply(VariaContext context)
          VB: Public Overrides Sub Apply(context As VariaContext)
        parameters:
        - id: context
          type: Varia.VariaContext
      overload: Varia.VariaDestroy.Apply*
      overridden: Varia.VariaBehaviour.Apply(Varia.VariaContext)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Varia.WeightedGameObject
    commentId: T:Varia.WeightedGameObject
    language: CSharp
    name:
      CSharp: WeightedGameObject
      VB: WeightedGameObject
    nameWithType:
      CSharp: WeightedGameObject
      VB: WeightedGameObject
    qualifiedName:
      CSharp: Varia.WeightedGameObject
      VB: Varia.WeightedGameObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: WeightedGameObject
      path: ''
      startLine: 194
    syntax:
      content:
        CSharp: public class WeightedGameObject
        VB: Public Class WeightedGameObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.WeightedGameObject.gameObject
      commentId: F:Varia.WeightedGameObject.gameObject
      language: CSharp
      name:
        CSharp: gameObject
        VB: gameObject
      nameWithType:
        CSharp: WeightedGameObject.gameObject
        VB: WeightedGameObject.gameObject
      qualifiedName:
        CSharp: Varia.WeightedGameObject.gameObject
        VB: Varia.WeightedGameObject.gameObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: gameObject
        path: ''
        startLine: 197
      syntax:
        content:
          CSharp: public GameObject gameObject
          VB: Public gameObject As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.WeightedGameObject.weight
      commentId: F:Varia.WeightedGameObject.weight
      language: CSharp
      name:
        CSharp: weight
        VB: weight
      nameWithType:
        CSharp: WeightedGameObject.weight
        VB: WeightedGameObject.weight
      qualifiedName:
        CSharp: Varia.WeightedGameObject.weight
        VB: Varia.WeightedGameObject.weight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: weight
        path: ''
        startLine: 198
      syntax:
        content:
          CSharp: public float weight
          VB: Public weight As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Varia.VariaInstantiate
    commentId: T:Varia.VariaInstantiate
    language: CSharp
    name:
      CSharp: VariaInstantiate
      VB: VariaInstantiate
    nameWithType:
      CSharp: VariaInstantiate
      VB: VariaInstantiate
    qualifiedName:
      CSharp: Varia.VariaInstantiate
      VB: Varia.VariaInstantiate
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaInstantiate
      path: ''
      startLine: 209
    summary: "\nPicks a random prefab from a list, and instantiates it with VariaUtils.Instantiate.\nThis may recursively instantiate more objects itself, which is tracked as the &quot;depth&quot;.\nAfter the instantiation, this object is deleted.\n\nWarning: There are some issues with using a target that is a direct parent of this component. \nTo fix this, either make an extra prefab to avoid the issue, or use VariaUtils.Instantiate instead of normal instantiation.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class VariaInstantiate : VariaBehaviour'
        VB: >-
          Public Class VariaInstantiate

              Inherits VariaBehaviour
    inheritance:
    - System.Object
    - Varia.VariaBehaviour
    inheritedMembers:
    - Varia.VariaBehaviour.conditionList
    - Varia.VariaBehaviour.OnEnable
    - Varia.VariaBehaviour.NoApply(Varia.VariaContext)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaInstantiate.targets
      commentId: F:Varia.VariaInstantiate.targets
      language: CSharp
      name:
        CSharp: targets
        VB: targets
      nameWithType:
        CSharp: VariaInstantiate.targets
        VB: VariaInstantiate.targets
      qualifiedName:
        CSharp: Varia.VariaInstantiate.targets
        VB: Varia.VariaInstantiate.targets
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: targets
        path: ''
        startLine: 220
      summary: "\nThe list of game objects to instantiate, and their weights.\nYou are recommended to only instantiate prefabs, or objects marked with <xref href=\"Varia.VariaPrototype\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public List<WeightedGameObject> targets
          VB: Public targets As List(Of WeightedGameObject)
        return:
          type: System.Collections.Generic.List{Varia.WeightedGameObject}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Varia.VariaPrototype: 
    - id: Varia.VariaInstantiate.useWeights
      commentId: F:Varia.VariaInstantiate.useWeights
      language: CSharp
      name:
        CSharp: useWeights
        VB: useWeights
      nameWithType:
        CSharp: VariaInstantiate.useWeights
        VB: VariaInstantiate.useWeights
      qualifiedName:
        CSharp: Varia.VariaInstantiate.useWeights
        VB: Varia.VariaInstantiate.useWeights
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: useWeights
        path: ''
        startLine: 227
      summary: "\nIf enabled, the <xref href=\"Varia.WeightedGameObject.weight\" data-throw-if-not-resolved=\"false\"></xref> property alters the probabiliyt of picking that target.\nOtherwise, they are picked uniformly.\n"
      example: []
      syntax:
        content:
          CSharp: public bool useWeights
          VB: Public useWeights As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Varia.WeightedGameObject.weight: 
    - id: Varia.VariaInstantiate.thenDestroyThis
      commentId: F:Varia.VariaInstantiate.thenDestroyThis
      language: CSharp
      name:
        CSharp: thenDestroyThis
        VB: thenDestroyThis
      nameWithType:
        CSharp: VariaInstantiate.thenDestroyThis
        VB: VariaInstantiate.thenDestroyThis
      qualifiedName:
        CSharp: Varia.VariaInstantiate.thenDestroyThis
        VB: Varia.VariaInstantiate.thenDestroyThis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: thenDestroyThis
        path: ''
        startLine: 233
      summary: "\nIf true, destroys the game object the VariaInstantiate component is on. \nThis can be used to make the instantiation work as a replacement instead.\n"
      example: []
      syntax:
        content:
          CSharp: public bool thenDestroyThis
          VB: Public thenDestroyThis As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaInstantiate.#ctor
      commentId: M:Varia.VariaInstantiate.#ctor
      language: CSharp
      name:
        CSharp: VariaInstantiate()
        VB: VariaInstantiate()
      nameWithType:
        CSharp: VariaInstantiate.VariaInstantiate()
        VB: VariaInstantiate.VariaInstantiate()
      qualifiedName:
        CSharp: Varia.VariaInstantiate.VariaInstantiate()
        VB: Varia.VariaInstantiate.VariaInstantiate()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: .ctor
        path: ''
        startLine: 235
      syntax:
        content:
          CSharp: public VariaInstantiate()
          VB: Public Sub New
      overload: Varia.VariaInstantiate.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaInstantiate.Apply(Varia.VariaContext)
      commentId: M:Varia.VariaInstantiate.Apply(Varia.VariaContext)
      language: CSharp
      name:
        CSharp: Apply(VariaContext)
        VB: Apply(VariaContext)
      nameWithType:
        CSharp: VariaInstantiate.Apply(VariaContext)
        VB: VariaInstantiate.Apply(VariaContext)
      qualifiedName:
        CSharp: Varia.VariaInstantiate.Apply(Varia.VariaContext)
        VB: Varia.VariaInstantiate.Apply(Varia.VariaContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Apply
        path: ''
        startLine: 248
      syntax:
        content:
          CSharp: public override void Apply(VariaContext context)
          VB: Public Overrides Sub Apply(context As VariaContext)
        parameters:
        - id: context
          type: Varia.VariaContext
      overload: Varia.VariaInstantiate.Apply*
      overridden: Varia.VariaBehaviour.Apply(Varia.VariaContext)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Varia.VariaKeep
    commentId: T:Varia.VariaKeep
    language: CSharp
    name:
      CSharp: VariaKeep
      VB: VariaKeep
    nameWithType:
      CSharp: VariaKeep
      VB: VariaKeep
    qualifiedName:
      CSharp: Varia.VariaKeep
      VB: Varia.VariaKeep
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaKeep
      path: ''
      startLine: 318
    summary: "\nDestroys the GameObject if the conditions are *not* met.\nYou should add conditions to this component or it is mostly useless.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class VariaKeep : VariaBehaviour'
        VB: >-
          Public Class VariaKeep

              Inherits VariaBehaviour
    inheritance:
    - System.Object
    - Varia.VariaBehaviour
    inheritedMembers:
    - Varia.VariaBehaviour.conditionList
    - Varia.VariaBehaviour.OnEnable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaKeep.#ctor
      commentId: M:Varia.VariaKeep.#ctor
      language: CSharp
      name:
        CSharp: VariaKeep()
        VB: VariaKeep()
      nameWithType:
        CSharp: VariaKeep.VariaKeep()
        VB: VariaKeep.VariaKeep()
      qualifiedName:
        CSharp: Varia.VariaKeep.VariaKeep()
        VB: Varia.VariaKeep.VariaKeep()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: .ctor
        path: ''
        startLine: 321
      syntax:
        content:
          CSharp: public VariaKeep()
          VB: Public Sub New
      overload: Varia.VariaKeep.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaKeep.Apply(Varia.VariaContext)
      commentId: M:Varia.VariaKeep.Apply(Varia.VariaContext)
      language: CSharp
      name:
        CSharp: Apply(VariaContext)
        VB: Apply(VariaContext)
      nameWithType:
        CSharp: VariaKeep.Apply(VariaContext)
        VB: VariaKeep.Apply(VariaContext)
      qualifiedName:
        CSharp: Varia.VariaKeep.Apply(Varia.VariaContext)
        VB: Varia.VariaKeep.Apply(Varia.VariaContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Apply
        path: ''
        startLine: 333
      syntax:
        content:
          CSharp: public override void Apply(VariaContext context)
          VB: Public Overrides Sub Apply(context As VariaContext)
        parameters:
        - id: context
          type: Varia.VariaContext
      overload: Varia.VariaKeep.Apply*
      overridden: Varia.VariaBehaviour.Apply(Varia.VariaContext)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Varia.VariaKeep.NoApply(Varia.VariaContext)
      commentId: M:Varia.VariaKeep.NoApply(Varia.VariaContext)
      language: CSharp
      name:
        CSharp: NoApply(VariaContext)
        VB: NoApply(VariaContext)
      nameWithType:
        CSharp: VariaKeep.NoApply(VariaContext)
        VB: VariaKeep.NoApply(VariaContext)
      qualifiedName:
        CSharp: Varia.VariaKeep.NoApply(Varia.VariaContext)
        VB: Varia.VariaKeep.NoApply(Varia.VariaContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: NoApply
        path: ''
        startLine: 340
      syntax:
        content:
          CSharp: public override void NoApply(VariaContext context)
          VB: Public Overrides Sub NoApply(context As VariaContext)
        parameters:
        - id: context
          type: Varia.VariaContext
      overload: Varia.VariaKeep.NoApply*
      overridden: Varia.VariaBehaviour.NoApply(Varia.VariaContext)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Varia.RelativeTo
    commentId: T:Varia.RelativeTo
    language: CSharp
    name:
      CSharp: RelativeTo
      VB: RelativeTo
    nameWithType:
      CSharp: RelativeTo
      VB: RelativeTo
    qualifiedName:
      CSharp: Varia.RelativeTo
      VB: Varia.RelativeTo
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: RelativeTo
      path: ''
      startLine: 359
    syntax:
      content:
        CSharp: public enum RelativeTo
        VB: Public Enum RelativeTo
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Varia.RelativeTo.Local
      commentId: F:Varia.RelativeTo.Local
      language: CSharp
      name:
        CSharp: Local
        VB: Local
      nameWithType:
        CSharp: RelativeTo.Local
        VB: RelativeTo.Local
      qualifiedName:
        CSharp: Varia.RelativeTo.Local
        VB: Varia.RelativeTo.Local
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Local
        path: ''
        startLine: 361
      syntax:
        content:
          CSharp: Local = 0
          VB: Local = 0
        return:
          type: Varia.RelativeTo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.RelativeTo.Parent
      commentId: F:Varia.RelativeTo.Parent
      language: CSharp
      name:
        CSharp: Parent
        VB: Parent
      nameWithType:
        CSharp: RelativeTo.Parent
        VB: RelativeTo.Parent
      qualifiedName:
        CSharp: Varia.RelativeTo.Parent
        VB: Varia.RelativeTo.Parent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Parent
        path: ''
        startLine: 362
      syntax:
        content:
          CSharp: Parent = 1
          VB: Parent = 1
        return:
          type: Varia.RelativeTo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.RelativeTo.World
      commentId: F:Varia.RelativeTo.World
      language: CSharp
      name:
        CSharp: World
        VB: World
      nameWithType:
        CSharp: RelativeTo.World
        VB: RelativeTo.World
      qualifiedName:
        CSharp: Varia.RelativeTo.World
        VB: Varia.RelativeTo.World
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: World
        path: ''
        startLine: 363
      syntax:
        content:
          CSharp: World = 2
          VB: World = 2
        return:
          type: Varia.RelativeTo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Varia.VariaRandomPosition
    commentId: T:Varia.VariaRandomPosition
    language: CSharp
    name:
      CSharp: VariaRandomPosition
      VB: VariaRandomPosition
    nameWithType:
      CSharp: VariaRandomPosition
      VB: VariaRandomPosition
    qualifiedName:
      CSharp: Varia.VariaRandomPosition
      VB: Varia.VariaRandomPosition
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaRandomPosition
      path: ''
      startLine: 369
    summary: "\nOffsets the position, randomly\n"
    example: []
    syntax:
      content:
        CSharp: 'public class VariaRandomPosition : VariaBehaviour'
        VB: >-
          Public Class VariaRandomPosition

              Inherits VariaBehaviour
    inheritance:
    - System.Object
    - Varia.VariaBehaviour
    inheritedMembers:
    - Varia.VariaBehaviour.conditionList
    - Varia.VariaBehaviour.OnEnable
    - Varia.VariaBehaviour.NoApply(Varia.VariaContext)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaRandomPosition.relativeTo
      commentId: F:Varia.VariaRandomPosition.relativeTo
      language: CSharp
      name:
        CSharp: relativeTo
        VB: relativeTo
      nameWithType:
        CSharp: VariaRandomPosition.relativeTo
        VB: VariaRandomPosition.relativeTo
      qualifiedName:
        CSharp: Varia.VariaRandomPosition.relativeTo
        VB: Varia.VariaRandomPosition.relativeTo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: relativeTo
        path: ''
        startLine: 375
      summary: "\nInidcates what space the offset should be performed in.\n"
      example: []
      syntax:
        content:
          CSharp: public RelativeTo relativeTo
          VB: Public relativeTo As RelativeTo
        return:
          type: Varia.RelativeTo
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomPosition.minX
      commentId: F:Varia.VariaRandomPosition.minX
      language: CSharp
      name:
        CSharp: minX
        VB: minX
      nameWithType:
        CSharp: VariaRandomPosition.minX
        VB: VariaRandomPosition.minX
      qualifiedName:
        CSharp: Varia.VariaRandomPosition.minX
        VB: Varia.VariaRandomPosition.minX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: minX
        path: ''
        startLine: 377
      syntax:
        content:
          CSharp: public float minX
          VB: Public minX As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomPosition.maxX
      commentId: F:Varia.VariaRandomPosition.maxX
      language: CSharp
      name:
        CSharp: maxX
        VB: maxX
      nameWithType:
        CSharp: VariaRandomPosition.maxX
        VB: VariaRandomPosition.maxX
      qualifiedName:
        CSharp: Varia.VariaRandomPosition.maxX
        VB: Varia.VariaRandomPosition.maxX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: maxX
        path: ''
        startLine: 378
      syntax:
        content:
          CSharp: public float maxX
          VB: Public maxX As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomPosition.minY
      commentId: F:Varia.VariaRandomPosition.minY
      language: CSharp
      name:
        CSharp: minY
        VB: minY
      nameWithType:
        CSharp: VariaRandomPosition.minY
        VB: VariaRandomPosition.minY
      qualifiedName:
        CSharp: Varia.VariaRandomPosition.minY
        VB: Varia.VariaRandomPosition.minY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: minY
        path: ''
        startLine: 379
      syntax:
        content:
          CSharp: public float minY
          VB: Public minY As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomPosition.maxY
      commentId: F:Varia.VariaRandomPosition.maxY
      language: CSharp
      name:
        CSharp: maxY
        VB: maxY
      nameWithType:
        CSharp: VariaRandomPosition.maxY
        VB: VariaRandomPosition.maxY
      qualifiedName:
        CSharp: Varia.VariaRandomPosition.maxY
        VB: Varia.VariaRandomPosition.maxY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: maxY
        path: ''
        startLine: 380
      syntax:
        content:
          CSharp: public float maxY
          VB: Public maxY As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomPosition.minZ
      commentId: F:Varia.VariaRandomPosition.minZ
      language: CSharp
      name:
        CSharp: minZ
        VB: minZ
      nameWithType:
        CSharp: VariaRandomPosition.minZ
        VB: VariaRandomPosition.minZ
      qualifiedName:
        CSharp: Varia.VariaRandomPosition.minZ
        VB: Varia.VariaRandomPosition.minZ
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: minZ
        path: ''
        startLine: 381
      syntax:
        content:
          CSharp: public float minZ
          VB: Public minZ As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomPosition.maxZ
      commentId: F:Varia.VariaRandomPosition.maxZ
      language: CSharp
      name:
        CSharp: maxZ
        VB: maxZ
      nameWithType:
        CSharp: VariaRandomPosition.maxZ
        VB: VariaRandomPosition.maxZ
      qualifiedName:
        CSharp: Varia.VariaRandomPosition.maxZ
        VB: Varia.VariaRandomPosition.maxZ
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: maxZ
        path: ''
        startLine: 382
      syntax:
        content:
          CSharp: public float maxZ
          VB: Public maxZ As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomPosition.Apply(Varia.VariaContext)
      commentId: M:Varia.VariaRandomPosition.Apply(Varia.VariaContext)
      language: CSharp
      name:
        CSharp: Apply(VariaContext)
        VB: Apply(VariaContext)
      nameWithType:
        CSharp: VariaRandomPosition.Apply(VariaContext)
        VB: VariaRandomPosition.Apply(VariaContext)
      qualifiedName:
        CSharp: Varia.VariaRandomPosition.Apply(Varia.VariaContext)
        VB: Varia.VariaRandomPosition.Apply(Varia.VariaContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Apply
        path: ''
        startLine: 384
      syntax:
        content:
          CSharp: public override void Apply(VariaContext context)
          VB: Public Overrides Sub Apply(context As VariaContext)
        parameters:
        - id: context
          type: Varia.VariaContext
      overload: Varia.VariaRandomPosition.Apply*
      overridden: Varia.VariaBehaviour.Apply(Varia.VariaContext)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Varia.VariaRandomRotation
    commentId: T:Varia.VariaRandomRotation
    language: CSharp
    name:
      CSharp: VariaRandomRotation
      VB: VariaRandomRotation
    nameWithType:
      CSharp: VariaRandomRotation
      VB: VariaRandomRotation
    qualifiedName:
      CSharp: Varia.VariaRandomRotation
      VB: Varia.VariaRandomRotation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaRandomRotation
      path: ''
      startLine: 433
    summary: "\nRotates the object randomly around a given axis.\n\nTwo sorts of rotation are supported:\n* Rotating around the axis (rolling) using <xref href=\"Varia.VariaRandomRotation.min\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Varia.VariaRandomRotation.max\" data-throw-if-not-resolved=\"false\"></xref>.\n* Rotating away from the axis (pitch / yaw) using <xref href=\"Varia.VariaRandomRotation.dispersionMin\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Varia.VariaRandomRotation.dispersionMax\" data-throw-if-not-resolved=\"false\"></xref>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class VariaRandomRotation : VariaBehaviour'
        VB: >-
          Public Class VariaRandomRotation

              Inherits VariaBehaviour
    inheritance:
    - System.Object
    - Varia.VariaBehaviour
    inheritedMembers:
    - Varia.VariaBehaviour.conditionList
    - Varia.VariaBehaviour.OnEnable
    - Varia.VariaBehaviour.NoApply(Varia.VariaContext)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaRandomRotation.point
      commentId: F:Varia.VariaRandomRotation.point
      language: CSharp
      name:
        CSharp: point
        VB: point
      nameWithType:
        CSharp: VariaRandomRotation.point
        VB: VariaRandomRotation.point
      qualifiedName:
        CSharp: Varia.VariaRandomRotation.point
        VB: Varia.VariaRandomRotation.point
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: point
        path: ''
        startLine: 439
      summary: "\nPoint to keep fixed during rotation\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 point
          VB: Public point As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomRotation.axis
      commentId: F:Varia.VariaRandomRotation.axis
      language: CSharp
      name:
        CSharp: axis
        VB: axis
      nameWithType:
        CSharp: VariaRandomRotation.axis
        VB: VariaRandomRotation.axis
      qualifiedName:
        CSharp: Varia.VariaRandomRotation.axis
        VB: Varia.VariaRandomRotation.axis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: axis
        path: ''
        startLine: 444
      summary: "\nLocal axis of rotations\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 axis
          VB: Public axis As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomRotation.min
      commentId: F:Varia.VariaRandomRotation.min
      language: CSharp
      name:
        CSharp: min
        VB: min
      nameWithType:
        CSharp: VariaRandomRotation.min
        VB: VariaRandomRotation.min
      qualifiedName:
        CSharp: Varia.VariaRandomRotation.min
        VB: Varia.VariaRandomRotation.min
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: min
        path: ''
        startLine: 449
      summary: "\nMin amount to rotate around the axis\n"
      example: []
      syntax:
        content:
          CSharp: public float min
          VB: Public min As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomRotation.max
      commentId: F:Varia.VariaRandomRotation.max
      language: CSharp
      name:
        CSharp: max
        VB: max
      nameWithType:
        CSharp: VariaRandomRotation.max
        VB: VariaRandomRotation.max
      qualifiedName:
        CSharp: Varia.VariaRandomRotation.max
        VB: Varia.VariaRandomRotation.max
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: max
        path: ''
        startLine: 455
      summary: "\nMax amount to rotate around the axis\n"
      example: []
      syntax:
        content:
          CSharp: public float max
          VB: Public max As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomRotation.dispersionMin
      commentId: F:Varia.VariaRandomRotation.dispersionMin
      language: CSharp
      name:
        CSharp: dispersionMin
        VB: dispersionMin
      nameWithType:
        CSharp: VariaRandomRotation.dispersionMin
        VB: VariaRandomRotation.dispersionMin
      qualifiedName:
        CSharp: Varia.VariaRandomRotation.dispersionMin
        VB: Varia.VariaRandomRotation.dispersionMin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: dispersionMin
        path: ''
        startLine: 460
      summary: "\nMin amount to rotate away from the axis.\n"
      example: []
      syntax:
        content:
          CSharp: public float dispersionMin
          VB: Public dispersionMin As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomRotation.dispersionMax
      commentId: F:Varia.VariaRandomRotation.dispersionMax
      language: CSharp
      name:
        CSharp: dispersionMax
        VB: dispersionMax
      nameWithType:
        CSharp: VariaRandomRotation.dispersionMax
        VB: VariaRandomRotation.dispersionMax
      qualifiedName:
        CSharp: Varia.VariaRandomRotation.dispersionMax
        VB: Varia.VariaRandomRotation.dispersionMax
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: dispersionMax
        path: ''
        startLine: 465
      summary: "\nMax amount to rotate away from the axis.\n"
      example: []
      syntax:
        content:
          CSharp: public float dispersionMax
          VB: Public dispersionMax As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomRotation.Apply(Varia.VariaContext)
      commentId: M:Varia.VariaRandomRotation.Apply(Varia.VariaContext)
      language: CSharp
      name:
        CSharp: Apply(VariaContext)
        VB: Apply(VariaContext)
      nameWithType:
        CSharp: VariaRandomRotation.Apply(VariaContext)
        VB: VariaRandomRotation.Apply(VariaContext)
      qualifiedName:
        CSharp: Varia.VariaRandomRotation.Apply(Varia.VariaContext)
        VB: Varia.VariaRandomRotation.Apply(Varia.VariaContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Apply
        path: ''
        startLine: 467
      syntax:
        content:
          CSharp: public override void Apply(VariaContext context)
          VB: Public Overrides Sub Apply(context As VariaContext)
        parameters:
        - id: context
          type: Varia.VariaContext
      overload: Varia.VariaRandomRotation.Apply*
      overridden: Varia.VariaBehaviour.Apply(Varia.VariaContext)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    references:
      Varia.VariaRandomRotation.min: 
      Varia.VariaRandomRotation.max: 
      Varia.VariaRandomRotation.dispersionMin: 
      Varia.VariaRandomRotation.dispersionMax: 
  - id: Varia.VariaRandomScale
    commentId: T:Varia.VariaRandomScale
    language: CSharp
    name:
      CSharp: VariaRandomScale
      VB: VariaRandomScale
    nameWithType:
      CSharp: VariaRandomScale
      VB: VariaRandomScale
    qualifiedName:
      CSharp: Varia.VariaRandomScale
      VB: Varia.VariaRandomScale
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaRandomScale
      path: ''
      startLine: 494
    summary: "\nChanges transform.localScale randomly.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class VariaRandomScale : VariaBehaviour'
        VB: >-
          Public Class VariaRandomScale

              Inherits VariaBehaviour
    inheritance:
    - System.Object
    - Varia.VariaBehaviour
    inheritedMembers:
    - Varia.VariaBehaviour.conditionList
    - Varia.VariaBehaviour.OnEnable
    - Varia.VariaBehaviour.NoApply(Varia.VariaContext)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaRandomScale.linked
      commentId: F:Varia.VariaRandomScale.linked
      language: CSharp
      name:
        CSharp: linked
        VB: linked
      nameWithType:
        CSharp: VariaRandomScale.linked
        VB: VariaRandomScale.linked
      qualifiedName:
        CSharp: Varia.VariaRandomScale.linked
        VB: Varia.VariaRandomScale.linked
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: linked
        path: ''
        startLine: 500
      summary: "\nIf true, X,Y and Z are all scaled together, otherwise they are independently scaled.\n"
      example: []
      syntax:
        content:
          CSharp: public bool linked
          VB: Public linked As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomScale.minX
      commentId: F:Varia.VariaRandomScale.minX
      language: CSharp
      name:
        CSharp: minX
        VB: minX
      nameWithType:
        CSharp: VariaRandomScale.minX
        VB: VariaRandomScale.minX
      qualifiedName:
        CSharp: Varia.VariaRandomScale.minX
        VB: Varia.VariaRandomScale.minX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: minX
        path: ''
        startLine: 502
      syntax:
        content:
          CSharp: public float minX
          VB: Public minX As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomScale.maxX
      commentId: F:Varia.VariaRandomScale.maxX
      language: CSharp
      name:
        CSharp: maxX
        VB: maxX
      nameWithType:
        CSharp: VariaRandomScale.maxX
        VB: VariaRandomScale.maxX
      qualifiedName:
        CSharp: Varia.VariaRandomScale.maxX
        VB: Varia.VariaRandomScale.maxX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: maxX
        path: ''
        startLine: 503
      syntax:
        content:
          CSharp: public float maxX
          VB: Public maxX As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomScale.minY
      commentId: F:Varia.VariaRandomScale.minY
      language: CSharp
      name:
        CSharp: minY
        VB: minY
      nameWithType:
        CSharp: VariaRandomScale.minY
        VB: VariaRandomScale.minY
      qualifiedName:
        CSharp: Varia.VariaRandomScale.minY
        VB: Varia.VariaRandomScale.minY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: minY
        path: ''
        startLine: 504
      syntax:
        content:
          CSharp: public float minY
          VB: Public minY As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomScale.maxY
      commentId: F:Varia.VariaRandomScale.maxY
      language: CSharp
      name:
        CSharp: maxY
        VB: maxY
      nameWithType:
        CSharp: VariaRandomScale.maxY
        VB: VariaRandomScale.maxY
      qualifiedName:
        CSharp: Varia.VariaRandomScale.maxY
        VB: Varia.VariaRandomScale.maxY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: maxY
        path: ''
        startLine: 505
      syntax:
        content:
          CSharp: public float maxY
          VB: Public maxY As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomScale.minZ
      commentId: F:Varia.VariaRandomScale.minZ
      language: CSharp
      name:
        CSharp: minZ
        VB: minZ
      nameWithType:
        CSharp: VariaRandomScale.minZ
        VB: VariaRandomScale.minZ
      qualifiedName:
        CSharp: Varia.VariaRandomScale.minZ
        VB: Varia.VariaRandomScale.minZ
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: minZ
        path: ''
        startLine: 506
      syntax:
        content:
          CSharp: public float minZ
          VB: Public minZ As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomScale.maxZ
      commentId: F:Varia.VariaRandomScale.maxZ
      language: CSharp
      name:
        CSharp: maxZ
        VB: maxZ
      nameWithType:
        CSharp: VariaRandomScale.maxZ
        VB: VariaRandomScale.maxZ
      qualifiedName:
        CSharp: Varia.VariaRandomScale.maxZ
        VB: Varia.VariaRandomScale.maxZ
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: maxZ
        path: ''
        startLine: 507
      syntax:
        content:
          CSharp: public float maxZ
          VB: Public maxZ As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomScale.scaleOrigin
      commentId: F:Varia.VariaRandomScale.scaleOrigin
      language: CSharp
      name:
        CSharp: scaleOrigin
        VB: scaleOrigin
      nameWithType:
        CSharp: VariaRandomScale.scaleOrigin
        VB: VariaRandomScale.scaleOrigin
      qualifiedName:
        CSharp: Varia.VariaRandomScale.scaleOrigin
        VB: Varia.VariaRandomScale.scaleOrigin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: scaleOrigin
        path: ''
        startLine: 512
      summary: "\nThe local point that should stay fixed while scaling\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 scaleOrigin
          VB: Public scaleOrigin As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomScale.Apply(Varia.VariaContext)
      commentId: M:Varia.VariaRandomScale.Apply(Varia.VariaContext)
      language: CSharp
      name:
        CSharp: Apply(VariaContext)
        VB: Apply(VariaContext)
      nameWithType:
        CSharp: VariaRandomScale.Apply(VariaContext)
        VB: VariaRandomScale.Apply(VariaContext)
      qualifiedName:
        CSharp: Varia.VariaRandomScale.Apply(Varia.VariaContext)
        VB: Varia.VariaRandomScale.Apply(Varia.VariaContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Apply
        path: ''
        startLine: 514
      syntax:
        content:
          CSharp: public override void Apply(VariaContext context)
          VB: Public Overrides Sub Apply(context As VariaContext)
        parameters:
        - id: context
          type: Varia.VariaContext
      overload: Varia.VariaRandomScale.Apply*
      overridden: Varia.VariaBehaviour.Apply(Varia.VariaContext)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Varia.VariaRandomTint
    commentId: T:Varia.VariaRandomTint
    language: CSharp
    name:
      CSharp: VariaRandomTint
      VB: VariaRandomTint
    nameWithType:
      CSharp: VariaRandomTint
      VB: VariaRandomTint
    qualifiedName:
      CSharp: Varia.VariaRandomTint
      VB: Varia.VariaRandomTint
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaRandomTint
      path: ''
      startLine: 541
    summary: "\nRandomly sets the color of a MeshRenderer or SpriteRenderer component.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class VariaRandomTint : VariaBehaviour'
        VB: >-
          Public Class VariaRandomTint

              Inherits VariaBehaviour
    inheritance:
    - System.Object
    - Varia.VariaBehaviour
    inheritedMembers:
    - Varia.VariaBehaviour.conditionList
    - Varia.VariaBehaviour.OnEnable
    - Varia.VariaBehaviour.NoApply(Varia.VariaContext)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaRandomTint.target
      commentId: F:Varia.VariaRandomTint.target
      language: CSharp
      name:
        CSharp: target
        VB: target
      nameWithType:
        CSharp: VariaRandomTint.target
        VB: VariaRandomTint.target
      qualifiedName:
        CSharp: Varia.VariaRandomTint.target
        VB: Varia.VariaRandomTint.target
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: target
        path: ''
        startLine: 547
      summary: "\nSpecifices the specific component to set the value on.\n"
      example: []
      syntax:
        content:
          CSharp: public Component target
          VB: Public target As Component
        return:
          type: Component
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.property
      commentId: F:Varia.VariaRandomTint.property
      language: CSharp
      name:
        CSharp: property
        VB: property
      nameWithType:
        CSharp: VariaRandomTint.property
        VB: VariaRandomTint.property
      qualifiedName:
        CSharp: Varia.VariaRandomTint.property
        VB: Varia.VariaRandomTint.property
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: property
        path: ''
        startLine: 552
      summary: "\nThe name of the property on the target component.\n"
      example: []
      syntax:
        content:
          CSharp: public string property
          VB: Public property As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.relative
      commentId: F:Varia.VariaRandomTint.relative
      language: CSharp
      name:
        CSharp: relative
        VB: relative
      nameWithType:
        CSharp: VariaRandomTint.relative
        VB: VariaRandomTint.relative
      qualifiedName:
        CSharp: Varia.VariaRandomTint.relative
        VB: Varia.VariaRandomTint.relative
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: relative
        path: ''
        startLine: 554
      syntax:
        content:
          CSharp: public bool relative
          VB: Public relative As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.relativeParent
      commentId: F:Varia.VariaRandomTint.relativeParent
      language: CSharp
      name:
        CSharp: relativeParent
        VB: relativeParent
      nameWithType:
        CSharp: VariaRandomTint.relativeParent
        VB: VariaRandomTint.relativeParent
      qualifiedName:
        CSharp: Varia.VariaRandomTint.relativeParent
        VB: Varia.VariaRandomTint.relativeParent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: relativeParent
        path: ''
        startLine: 555
      syntax:
        content:
          CSharp: public int relativeParent
          VB: Public relativeParent As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.hueMin
      commentId: F:Varia.VariaRandomTint.hueMin
      language: CSharp
      name:
        CSharp: hueMin
        VB: hueMin
      nameWithType:
        CSharp: VariaRandomTint.hueMin
        VB: VariaRandomTint.hueMin
      qualifiedName:
        CSharp: Varia.VariaRandomTint.hueMin
        VB: Varia.VariaRandomTint.hueMin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: hueMin
        path: ''
        startLine: 557
      syntax:
        content:
          CSharp: public float hueMin
          VB: Public hueMin As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.hueMax
      commentId: F:Varia.VariaRandomTint.hueMax
      language: CSharp
      name:
        CSharp: hueMax
        VB: hueMax
      nameWithType:
        CSharp: VariaRandomTint.hueMax
        VB: VariaRandomTint.hueMax
      qualifiedName:
        CSharp: Varia.VariaRandomTint.hueMax
        VB: Varia.VariaRandomTint.hueMax
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: hueMax
        path: ''
        startLine: 558
      syntax:
        content:
          CSharp: public float hueMax
          VB: Public hueMax As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.saturationMin
      commentId: F:Varia.VariaRandomTint.saturationMin
      language: CSharp
      name:
        CSharp: saturationMin
        VB: saturationMin
      nameWithType:
        CSharp: VariaRandomTint.saturationMin
        VB: VariaRandomTint.saturationMin
      qualifiedName:
        CSharp: Varia.VariaRandomTint.saturationMin
        VB: Varia.VariaRandomTint.saturationMin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: saturationMin
        path: ''
        startLine: 559
      syntax:
        content:
          CSharp: public float saturationMin
          VB: Public saturationMin As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.saturationMax
      commentId: F:Varia.VariaRandomTint.saturationMax
      language: CSharp
      name:
        CSharp: saturationMax
        VB: saturationMax
      nameWithType:
        CSharp: VariaRandomTint.saturationMax
        VB: VariaRandomTint.saturationMax
      qualifiedName:
        CSharp: Varia.VariaRandomTint.saturationMax
        VB: Varia.VariaRandomTint.saturationMax
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: saturationMax
        path: ''
        startLine: 560
      syntax:
        content:
          CSharp: public float saturationMax
          VB: Public saturationMax As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.valueMin
      commentId: F:Varia.VariaRandomTint.valueMin
      language: CSharp
      name:
        CSharp: valueMin
        VB: valueMin
      nameWithType:
        CSharp: VariaRandomTint.valueMin
        VB: VariaRandomTint.valueMin
      qualifiedName:
        CSharp: Varia.VariaRandomTint.valueMin
        VB: Varia.VariaRandomTint.valueMin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: valueMin
        path: ''
        startLine: 561
      syntax:
        content:
          CSharp: public float valueMin
          VB: Public valueMin As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.valueMax
      commentId: F:Varia.VariaRandomTint.valueMax
      language: CSharp
      name:
        CSharp: valueMax
        VB: valueMax
      nameWithType:
        CSharp: VariaRandomTint.valueMax
        VB: VariaRandomTint.valueMax
      qualifiedName:
        CSharp: Varia.VariaRandomTint.valueMax
        VB: Varia.VariaRandomTint.valueMax
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: valueMax
        path: ''
        startLine: 562
      syntax:
        content:
          CSharp: public float valueMax
          VB: Public valueMax As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.alphaMin
      commentId: F:Varia.VariaRandomTint.alphaMin
      language: CSharp
      name:
        CSharp: alphaMin
        VB: alphaMin
      nameWithType:
        CSharp: VariaRandomTint.alphaMin
        VB: VariaRandomTint.alphaMin
      qualifiedName:
        CSharp: Varia.VariaRandomTint.alphaMin
        VB: Varia.VariaRandomTint.alphaMin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: alphaMin
        path: ''
        startLine: 563
      syntax:
        content:
          CSharp: public float alphaMin
          VB: Public alphaMin As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.alphaMax
      commentId: F:Varia.VariaRandomTint.alphaMax
      language: CSharp
      name:
        CSharp: alphaMax
        VB: alphaMax
      nameWithType:
        CSharp: VariaRandomTint.alphaMax
        VB: VariaRandomTint.alphaMax
      qualifiedName:
        CSharp: Varia.VariaRandomTint.alphaMax
        VB: Varia.VariaRandomTint.alphaMax
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: alphaMax
        path: ''
        startLine: 564
      syntax:
        content:
          CSharp: public float alphaMax
          VB: Public alphaMax As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.Apply(Varia.VariaContext)
      commentId: M:Varia.VariaRandomTint.Apply(Varia.VariaContext)
      language: CSharp
      name:
        CSharp: Apply(VariaContext)
        VB: Apply(VariaContext)
      nameWithType:
        CSharp: VariaRandomTint.Apply(VariaContext)
        VB: VariaRandomTint.Apply(VariaContext)
      qualifiedName:
        CSharp: Varia.VariaRandomTint.Apply(Varia.VariaContext)
        VB: Varia.VariaRandomTint.Apply(Varia.VariaContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Apply
        path: ''
        startLine: 566
      syntax:
        content:
          CSharp: public override void Apply(VariaContext context)
          VB: Public Overrides Sub Apply(context As VariaContext)
        parameters:
        - id: context
          type: Varia.VariaContext
      overload: Varia.VariaRandomTint.Apply*
      overridden: Varia.VariaBehaviour.Apply(Varia.VariaContext)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Varia.VariaRandomTint.GetRelativeTarget
      commentId: M:Varia.VariaRandomTint.GetRelativeTarget
      language: CSharp
      name:
        CSharp: GetRelativeTarget()
        VB: GetRelativeTarget()
      nameWithType:
        CSharp: VariaRandomTint.GetRelativeTarget()
        VB: VariaRandomTint.GetRelativeTarget()
      qualifiedName:
        CSharp: Varia.VariaRandomTint.GetRelativeTarget()
        VB: Varia.VariaRandomTint.GetRelativeTarget()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: GetRelativeTarget
        path: ''
        startLine: 586
      syntax:
        content:
          CSharp: public Object GetRelativeTarget()
          VB: Public Function GetRelativeTarget As Object
        return:
          type: Object
      overload: Varia.VariaRandomTint.GetRelativeTarget*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.GetBaseColor
      commentId: M:Varia.VariaRandomTint.GetBaseColor
      language: CSharp
      name:
        CSharp: GetBaseColor()
        VB: GetBaseColor()
      nameWithType:
        CSharp: VariaRandomTint.GetBaseColor()
        VB: VariaRandomTint.GetBaseColor()
      qualifiedName:
        CSharp: Varia.VariaRandomTint.GetBaseColor()
        VB: Varia.VariaRandomTint.GetBaseColor()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: GetBaseColor
        path: ''
        startLine: 606
      syntax:
        content:
          CSharp: public Color? GetBaseColor()
          VB: Public Function GetBaseColor As Color?
        return:
          type: System.Nullable{Color}
      overload: Varia.VariaRandomTint.GetBaseColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomTint.GetColor(System.Boolean)
      commentId: M:Varia.VariaRandomTint.GetColor(System.Boolean)
      language: CSharp
      name:
        CSharp: GetColor(Boolean)
        VB: GetColor(Boolean)
      nameWithType:
        CSharp: VariaRandomTint.GetColor(Boolean)
        VB: VariaRandomTint.GetColor(Boolean)
      qualifiedName:
        CSharp: Varia.VariaRandomTint.GetColor(System.Boolean)
        VB: Varia.VariaRandomTint.GetColor(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: GetColor
        path: ''
        startLine: 615
      syntax:
        content:
          CSharp: public Color? GetColor(bool force = false)
          VB: Public Function GetColor(force As Boolean = False) As Color?
        parameters:
        - id: force
          type: System.Boolean
        return:
          type: System.Nullable{Color}
      overload: Varia.VariaRandomTint.GetColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Varia.VariaSerializedValueType
    commentId: T:Varia.VariaSerializedValueType
    language: CSharp
    name:
      CSharp: VariaSerializedValueType
      VB: VariaSerializedValueType
    nameWithType:
      CSharp: VariaSerializedValueType
      VB: VariaSerializedValueType
    qualifiedName:
      CSharp: Varia.VariaSerializedValueType
      VB: Varia.VariaSerializedValueType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaSerializedValueType
      path: ''
      startLine: 655
    syntax:
      content:
        CSharp: public enum VariaSerializedValueType
        VB: Public Enum VariaSerializedValueType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Varia.VariaSerializedValueType.Generic
      commentId: F:Varia.VariaSerializedValueType.Generic
      language: CSharp
      name:
        CSharp: Generic
        VB: Generic
      nameWithType:
        CSharp: VariaSerializedValueType.Generic
        VB: VariaSerializedValueType.Generic
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Generic
        VB: Varia.VariaSerializedValueType.Generic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Generic
        path: ''
        startLine: 657
      syntax:
        content:
          CSharp: Generic = -1
          VB: Generic = -1
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Integer
      commentId: F:Varia.VariaSerializedValueType.Integer
      language: CSharp
      name:
        CSharp: Integer
        VB: Integer
      nameWithType:
        CSharp: VariaSerializedValueType.Integer
        VB: VariaSerializedValueType.Integer
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Integer
        VB: Varia.VariaSerializedValueType.Integer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Integer
        path: ''
        startLine: 658
      syntax:
        content:
          CSharp: Integer = 0
          VB: Integer = 0
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Boolean
      commentId: F:Varia.VariaSerializedValueType.Boolean
      language: CSharp
      name:
        CSharp: Boolean
        VB: Boolean
      nameWithType:
        CSharp: VariaSerializedValueType.Boolean
        VB: VariaSerializedValueType.Boolean
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Boolean
        VB: Varia.VariaSerializedValueType.Boolean
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Boolean
        path: ''
        startLine: 659
      syntax:
        content:
          CSharp: Boolean = 1
          VB: Boolean = 1
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Float
      commentId: F:Varia.VariaSerializedValueType.Float
      language: CSharp
      name:
        CSharp: Float
        VB: Float
      nameWithType:
        CSharp: VariaSerializedValueType.Float
        VB: VariaSerializedValueType.Float
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Float
        VB: Varia.VariaSerializedValueType.Float
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Float
        path: ''
        startLine: 660
      syntax:
        content:
          CSharp: Float = 2
          VB: Float = 2
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.String
      commentId: F:Varia.VariaSerializedValueType.String
      language: CSharp
      name:
        CSharp: String
        VB: String
      nameWithType:
        CSharp: VariaSerializedValueType.String
        VB: VariaSerializedValueType.String
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.String
        VB: Varia.VariaSerializedValueType.String
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: String
        path: ''
        startLine: 661
      syntax:
        content:
          CSharp: String = 3
          VB: String = 3
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Color
      commentId: F:Varia.VariaSerializedValueType.Color
      language: CSharp
      name:
        CSharp: Color
        VB: Color
      nameWithType:
        CSharp: VariaSerializedValueType.Color
        VB: VariaSerializedValueType.Color
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Color
        VB: Varia.VariaSerializedValueType.Color
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Color
        path: ''
        startLine: 662
      syntax:
        content:
          CSharp: Color = 4
          VB: Color = 4
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.ObjectReference
      commentId: F:Varia.VariaSerializedValueType.ObjectReference
      language: CSharp
      name:
        CSharp: ObjectReference
        VB: ObjectReference
      nameWithType:
        CSharp: VariaSerializedValueType.ObjectReference
        VB: VariaSerializedValueType.ObjectReference
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.ObjectReference
        VB: Varia.VariaSerializedValueType.ObjectReference
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: ObjectReference
        path: ''
        startLine: 663
      syntax:
        content:
          CSharp: ObjectReference = 5
          VB: ObjectReference = 5
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.LayerMask
      commentId: F:Varia.VariaSerializedValueType.LayerMask
      language: CSharp
      name:
        CSharp: LayerMask
        VB: LayerMask
      nameWithType:
        CSharp: VariaSerializedValueType.LayerMask
        VB: VariaSerializedValueType.LayerMask
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.LayerMask
        VB: Varia.VariaSerializedValueType.LayerMask
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: LayerMask
        path: ''
        startLine: 664
      syntax:
        content:
          CSharp: LayerMask = 6
          VB: LayerMask = 6
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Enum
      commentId: F:Varia.VariaSerializedValueType.Enum
      language: CSharp
      name:
        CSharp: Enum
        VB: Enum
      nameWithType:
        CSharp: VariaSerializedValueType.Enum
        VB: VariaSerializedValueType.Enum
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Enum
        VB: Varia.VariaSerializedValueType.Enum
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Enum
        path: ''
        startLine: 665
      syntax:
        content:
          CSharp: Enum = 7
          VB: Enum = 7
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Vector2
      commentId: F:Varia.VariaSerializedValueType.Vector2
      language: CSharp
      name:
        CSharp: Vector2
        VB: Vector2
      nameWithType:
        CSharp: VariaSerializedValueType.Vector2
        VB: VariaSerializedValueType.Vector2
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Vector2
        VB: Varia.VariaSerializedValueType.Vector2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Vector2
        path: ''
        startLine: 666
      syntax:
        content:
          CSharp: Vector2 = 8
          VB: Vector2 = 8
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Vector3
      commentId: F:Varia.VariaSerializedValueType.Vector3
      language: CSharp
      name:
        CSharp: Vector3
        VB: Vector3
      nameWithType:
        CSharp: VariaSerializedValueType.Vector3
        VB: VariaSerializedValueType.Vector3
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Vector3
        VB: Varia.VariaSerializedValueType.Vector3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Vector3
        path: ''
        startLine: 667
      syntax:
        content:
          CSharp: Vector3 = 9
          VB: Vector3 = 9
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Vector4
      commentId: F:Varia.VariaSerializedValueType.Vector4
      language: CSharp
      name:
        CSharp: Vector4
        VB: Vector4
      nameWithType:
        CSharp: VariaSerializedValueType.Vector4
        VB: VariaSerializedValueType.Vector4
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Vector4
        VB: Varia.VariaSerializedValueType.Vector4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Vector4
        path: ''
        startLine: 668
      syntax:
        content:
          CSharp: Vector4 = 10
          VB: Vector4 = 10
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Rect
      commentId: F:Varia.VariaSerializedValueType.Rect
      language: CSharp
      name:
        CSharp: Rect
        VB: Rect
      nameWithType:
        CSharp: VariaSerializedValueType.Rect
        VB: VariaSerializedValueType.Rect
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Rect
        VB: Varia.VariaSerializedValueType.Rect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Rect
        path: ''
        startLine: 669
      syntax:
        content:
          CSharp: Rect = 11
          VB: Rect = 11
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.ArraySize
      commentId: F:Varia.VariaSerializedValueType.ArraySize
      language: CSharp
      name:
        CSharp: ArraySize
        VB: ArraySize
      nameWithType:
        CSharp: VariaSerializedValueType.ArraySize
        VB: VariaSerializedValueType.ArraySize
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.ArraySize
        VB: Varia.VariaSerializedValueType.ArraySize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: ArraySize
        path: ''
        startLine: 670
      syntax:
        content:
          CSharp: ArraySize = 12
          VB: ArraySize = 12
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Character
      commentId: F:Varia.VariaSerializedValueType.Character
      language: CSharp
      name:
        CSharp: Character
        VB: Character
      nameWithType:
        CSharp: VariaSerializedValueType.Character
        VB: VariaSerializedValueType.Character
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Character
        VB: Varia.VariaSerializedValueType.Character
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Character
        path: ''
        startLine: 671
      syntax:
        content:
          CSharp: Character = 13
          VB: Character = 13
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.AnimationCurve
      commentId: F:Varia.VariaSerializedValueType.AnimationCurve
      language: CSharp
      name:
        CSharp: AnimationCurve
        VB: AnimationCurve
      nameWithType:
        CSharp: VariaSerializedValueType.AnimationCurve
        VB: VariaSerializedValueType.AnimationCurve
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.AnimationCurve
        VB: Varia.VariaSerializedValueType.AnimationCurve
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: AnimationCurve
        path: ''
        startLine: 672
      syntax:
        content:
          CSharp: AnimationCurve = 14
          VB: AnimationCurve = 14
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Bounds
      commentId: F:Varia.VariaSerializedValueType.Bounds
      language: CSharp
      name:
        CSharp: Bounds
        VB: Bounds
      nameWithType:
        CSharp: VariaSerializedValueType.Bounds
        VB: VariaSerializedValueType.Bounds
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Bounds
        VB: Varia.VariaSerializedValueType.Bounds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Bounds
        path: ''
        startLine: 673
      syntax:
        content:
          CSharp: Bounds = 15
          VB: Bounds = 15
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Gradient
      commentId: F:Varia.VariaSerializedValueType.Gradient
      language: CSharp
      name:
        CSharp: Gradient
        VB: Gradient
      nameWithType:
        CSharp: VariaSerializedValueType.Gradient
        VB: VariaSerializedValueType.Gradient
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Gradient
        VB: Varia.VariaSerializedValueType.Gradient
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Gradient
        path: ''
        startLine: 674
      syntax:
        content:
          CSharp: Gradient = 16
          VB: Gradient = 16
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Quaternion
      commentId: F:Varia.VariaSerializedValueType.Quaternion
      language: CSharp
      name:
        CSharp: Quaternion
        VB: Quaternion
      nameWithType:
        CSharp: VariaSerializedValueType.Quaternion
        VB: VariaSerializedValueType.Quaternion
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Quaternion
        VB: Varia.VariaSerializedValueType.Quaternion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Quaternion
        path: ''
        startLine: 675
      syntax:
        content:
          CSharp: Quaternion = 17
          VB: Quaternion = 17
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.ExposedReference
      commentId: F:Varia.VariaSerializedValueType.ExposedReference
      language: CSharp
      name:
        CSharp: ExposedReference
        VB: ExposedReference
      nameWithType:
        CSharp: VariaSerializedValueType.ExposedReference
        VB: VariaSerializedValueType.ExposedReference
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.ExposedReference
        VB: Varia.VariaSerializedValueType.ExposedReference
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: ExposedReference
        path: ''
        startLine: 676
      syntax:
        content:
          CSharp: ExposedReference = 18
          VB: ExposedReference = 18
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.FixedBufferSize
      commentId: F:Varia.VariaSerializedValueType.FixedBufferSize
      language: CSharp
      name:
        CSharp: FixedBufferSize
        VB: FixedBufferSize
      nameWithType:
        CSharp: VariaSerializedValueType.FixedBufferSize
        VB: VariaSerializedValueType.FixedBufferSize
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.FixedBufferSize
        VB: Varia.VariaSerializedValueType.FixedBufferSize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: FixedBufferSize
        path: ''
        startLine: 677
      syntax:
        content:
          CSharp: FixedBufferSize = 19
          VB: FixedBufferSize = 19
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Vector2Int
      commentId: F:Varia.VariaSerializedValueType.Vector2Int
      language: CSharp
      name:
        CSharp: Vector2Int
        VB: Vector2Int
      nameWithType:
        CSharp: VariaSerializedValueType.Vector2Int
        VB: VariaSerializedValueType.Vector2Int
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Vector2Int
        VB: Varia.VariaSerializedValueType.Vector2Int
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Vector2Int
        path: ''
        startLine: 678
      syntax:
        content:
          CSharp: Vector2Int = 20
          VB: Vector2Int = 20
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.Vector3Int
      commentId: F:Varia.VariaSerializedValueType.Vector3Int
      language: CSharp
      name:
        CSharp: Vector3Int
        VB: Vector3Int
      nameWithType:
        CSharp: VariaSerializedValueType.Vector3Int
        VB: VariaSerializedValueType.Vector3Int
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.Vector3Int
        VB: Varia.VariaSerializedValueType.Vector3Int
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Vector3Int
        path: ''
        startLine: 679
      syntax:
        content:
          CSharp: Vector3Int = 21
          VB: Vector3Int = 21
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.RectInt
      commentId: F:Varia.VariaSerializedValueType.RectInt
      language: CSharp
      name:
        CSharp: RectInt
        VB: RectInt
      nameWithType:
        CSharp: VariaSerializedValueType.RectInt
        VB: VariaSerializedValueType.RectInt
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.RectInt
        VB: Varia.VariaSerializedValueType.RectInt
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: RectInt
        path: ''
        startLine: 680
      syntax:
        content:
          CSharp: RectInt = 22
          VB: RectInt = 22
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.BoundsInt
      commentId: F:Varia.VariaSerializedValueType.BoundsInt
      language: CSharp
      name:
        CSharp: BoundsInt
        VB: BoundsInt
      nameWithType:
        CSharp: VariaSerializedValueType.BoundsInt
        VB: VariaSerializedValueType.BoundsInt
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.BoundsInt
        VB: Varia.VariaSerializedValueType.BoundsInt
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: BoundsInt
        path: ''
        startLine: 681
      syntax:
        content:
          CSharp: BoundsInt = 23
          VB: BoundsInt = 23
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaSerializedValueType.ManagedReference
      commentId: F:Varia.VariaSerializedValueType.ManagedReference
      language: CSharp
      name:
        CSharp: ManagedReference
        VB: ManagedReference
      nameWithType:
        CSharp: VariaSerializedValueType.ManagedReference
        VB: VariaSerializedValueType.ManagedReference
      qualifiedName:
        CSharp: Varia.VariaSerializedValueType.ManagedReference
        VB: Varia.VariaSerializedValueType.ManagedReference
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: ManagedReference
        path: ''
        startLine: 682
      syntax:
        content:
          CSharp: ManagedReference = 24
          VB: ManagedReference = 24
        return:
          type: Varia.VariaSerializedValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Varia.VariaWeightedValue
    commentId: T:Varia.VariaWeightedValue
    language: CSharp
    name:
      CSharp: VariaWeightedValue
      VB: VariaWeightedValue
    nameWithType:
      CSharp: VariaWeightedValue
      VB: VariaWeightedValue
    qualifiedName:
      CSharp: Varia.VariaWeightedValue
      VB: Varia.VariaWeightedValue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaWeightedValue
      path: ''
      startLine: 688
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class VariaWeightedValue : ISerializationCallbackReceiver
        VB: >-
          <Serializable>

          Public Class VariaWeightedValue

              Inherits ISerializationCallbackReceiver
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaWeightedValue.value
      commentId: F:Varia.VariaWeightedValue.value
      language: CSharp
      name:
        CSharp: value
        VB: value
      nameWithType:
        CSharp: VariaWeightedValue.value
        VB: VariaWeightedValue.value
      qualifiedName:
        CSharp: Varia.VariaWeightedValue.value
        VB: Varia.VariaWeightedValue.value
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: value
        path: ''
        startLine: 692
      syntax:
        content:
          CSharp: >-
            [NonSerialized]

            public object value
          VB: >-
            <NonSerialized>

            Public value As Object
        return:
          type: System.Object
      attributes:
      - type: System.NonSerializedAttribute
        ctor: System.NonSerializedAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaWeightedValue.weight
      commentId: F:Varia.VariaWeightedValue.weight
      language: CSharp
      name:
        CSharp: weight
        VB: weight
      nameWithType:
        CSharp: VariaWeightedValue.weight
        VB: VariaWeightedValue.weight
      qualifiedName:
        CSharp: Varia.VariaWeightedValue.weight
        VB: Varia.VariaWeightedValue.weight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: weight
        path: ''
        startLine: 707
      syntax:
        content:
          CSharp: public float weight
          VB: Public weight As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaWeightedValue.OnBeforeSerialize
      commentId: M:Varia.VariaWeightedValue.OnBeforeSerialize
      language: CSharp
      name:
        CSharp: OnBeforeSerialize()
        VB: OnBeforeSerialize()
      nameWithType:
        CSharp: VariaWeightedValue.OnBeforeSerialize()
        VB: VariaWeightedValue.OnBeforeSerialize()
      qualifiedName:
        CSharp: Varia.VariaWeightedValue.OnBeforeSerialize()
        VB: Varia.VariaWeightedValue.OnBeforeSerialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: OnBeforeSerialize
        path: ''
        startLine: 709
      syntax:
        content:
          CSharp: public void OnBeforeSerialize()
          VB: Public Sub OnBeforeSerialize
      overload: Varia.VariaWeightedValue.OnBeforeSerialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaWeightedValue.OnAfterDeserialize
      commentId: M:Varia.VariaWeightedValue.OnAfterDeserialize
      language: CSharp
      name:
        CSharp: OnAfterDeserialize()
        VB: OnAfterDeserialize()
      nameWithType:
        CSharp: VariaWeightedValue.OnAfterDeserialize()
        VB: VariaWeightedValue.OnAfterDeserialize()
      qualifiedName:
        CSharp: Varia.VariaWeightedValue.OnAfterDeserialize()
        VB: Varia.VariaWeightedValue.OnAfterDeserialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: OnAfterDeserialize
        path: ''
        startLine: 837
      syntax:
        content:
          CSharp: public void OnAfterDeserialize()
          VB: Public Sub OnAfterDeserialize
      overload: Varia.VariaWeightedValue.OnAfterDeserialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaWeightedValue.GetDefault(System.Type)
      commentId: M:Varia.VariaWeightedValue.GetDefault(System.Type)
      language: CSharp
      name:
        CSharp: GetDefault(Type)
        VB: GetDefault(Type)
      nameWithType:
        CSharp: VariaWeightedValue.GetDefault(Type)
        VB: VariaWeightedValue.GetDefault(Type)
      qualifiedName:
        CSharp: Varia.VariaWeightedValue.GetDefault(System.Type)
        VB: Varia.VariaWeightedValue.GetDefault(System.Type)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: GetDefault
        path: ''
        startLine: 936
      syntax:
        content:
          CSharp: public static object GetDefault(Type t)
          VB: Public Shared Function GetDefault(t As Type) As Object
        parameters:
        - id: t
          type: System.Type
        return:
          type: System.Object
      overload: Varia.VariaWeightedValue.GetDefault*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Varia.VariaWeightedValue.CanSerialize(System.Type)
      commentId: M:Varia.VariaWeightedValue.CanSerialize(System.Type)
      language: CSharp
      name:
        CSharp: CanSerialize(Type)
        VB: CanSerialize(Type)
      nameWithType:
        CSharp: VariaWeightedValue.CanSerialize(Type)
        VB: VariaWeightedValue.CanSerialize(Type)
      qualifiedName:
        CSharp: Varia.VariaWeightedValue.CanSerialize(System.Type)
        VB: Varia.VariaWeightedValue.CanSerialize(System.Type)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: CanSerialize
        path: ''
        startLine: 953
      syntax:
        content:
          CSharp: public static bool CanSerialize(Type type)
          VB: Public Shared Function CanSerialize(type As Type) As Boolean
        parameters:
        - id: type
          type: System.Type
        return:
          type: System.Boolean
      overload: Varia.VariaWeightedValue.CanSerialize*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Varia.VariaRandomValue
    commentId: T:Varia.VariaRandomValue
    language: CSharp
    name:
      CSharp: VariaRandomValue
      VB: VariaRandomValue
    nameWithType:
      CSharp: VariaRandomValue
      VB: VariaRandomValue
    qualifiedName:
      CSharp: Varia.VariaRandomValue
      VB: Varia.VariaRandomValue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaRandomValue
      path: ''
      startLine: 1027
    summary: "\nSets any property of any component to a value chosen randomly from a list.\nOnly properties of types subclassing UnityEngine.Object are supported currently.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class VariaRandomValue : VariaBehaviour'
        VB: >-
          Public Class VariaRandomValue

              Inherits VariaBehaviour
    inheritance:
    - System.Object
    - Varia.VariaBehaviour
    inheritedMembers:
    - Varia.VariaBehaviour.conditionList
    - Varia.VariaBehaviour.OnEnable
    - Varia.VariaBehaviour.NoApply(Varia.VariaContext)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaRandomValue.target
      commentId: F:Varia.VariaRandomValue.target
      language: CSharp
      name:
        CSharp: target
        VB: target
      nameWithType:
        CSharp: VariaRandomValue.target
        VB: VariaRandomValue.target
      qualifiedName:
        CSharp: Varia.VariaRandomValue.target
        VB: Varia.VariaRandomValue.target
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: target
        path: ''
        startLine: 1033
      summary: "\nSpecifices the specific component to set the value on.\n"
      example: []
      syntax:
        content:
          CSharp: public Component target
          VB: Public target As Component
        return:
          type: Component
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomValue.property
      commentId: F:Varia.VariaRandomValue.property
      language: CSharp
      name:
        CSharp: property
        VB: property
      nameWithType:
        CSharp: VariaRandomValue.property
        VB: VariaRandomValue.property
      qualifiedName:
        CSharp: Varia.VariaRandomValue.property
        VB: Varia.VariaRandomValue.property
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: property
        path: ''
        startLine: 1038
      summary: "\nThe name of the property on the target component.\n"
      example: []
      syntax:
        content:
          CSharp: public string property
          VB: Public property As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomValue.values
      commentId: F:Varia.VariaRandomValue.values
      language: CSharp
      name:
        CSharp: values
        VB: values
      nameWithType:
        CSharp: VariaRandomValue.values
        VB: VariaRandomValue.values
      qualifiedName:
        CSharp: Varia.VariaRandomValue.values
        VB: Varia.VariaRandomValue.values
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: values
        path: ''
        startLine: 1043
      summary: "\nThe list of values to randomly choose from\n"
      example: []
      syntax:
        content:
          CSharp: public List<VariaWeightedValue> values
          VB: Public values As List(Of VariaWeightedValue)
        return:
          type: System.Collections.Generic.List{Varia.VariaWeightedValue}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaRandomValue.useWeights
      commentId: F:Varia.VariaRandomValue.useWeights
      language: CSharp
      name:
        CSharp: useWeights
        VB: useWeights
      nameWithType:
        CSharp: VariaRandomValue.useWeights
        VB: VariaRandomValue.useWeights
      qualifiedName:
        CSharp: Varia.VariaRandomValue.useWeights
        VB: Varia.VariaRandomValue.useWeights
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: useWeights
        path: ''
        startLine: 1048
      summary: "\nIf true, the random choice from <xref href=\"Varia.VariaRandomValue.values\" data-throw-if-not-resolved=\"false\"></xref> is weighted, otherwise they are chosen uniformly.\n"
      example: []
      syntax:
        content:
          CSharp: public bool useWeights
          VB: Public useWeights As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Varia.VariaRandomValue.values: 
    - id: Varia.VariaRandomValue.Apply(Varia.VariaContext)
      commentId: M:Varia.VariaRandomValue.Apply(Varia.VariaContext)
      language: CSharp
      name:
        CSharp: Apply(VariaContext)
        VB: Apply(VariaContext)
      nameWithType:
        CSharp: VariaRandomValue.Apply(VariaContext)
        VB: VariaRandomValue.Apply(VariaContext)
      qualifiedName:
        CSharp: Varia.VariaRandomValue.Apply(Varia.VariaContext)
        VB: Varia.VariaRandomValue.Apply(Varia.VariaContext)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Apply
        path: ''
        startLine: 1050
      syntax:
        content:
          CSharp: public override void Apply(VariaContext context)
          VB: Public Overrides Sub Apply(context As VariaContext)
        parameters:
        - id: context
          type: Varia.VariaContext
      overload: Varia.VariaRandomValue.Apply*
      overridden: Varia.VariaBehaviour.Apply(Varia.VariaContext)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Varia.VariaRandomValue.Mirror
      commentId: P:Varia.VariaRandomValue.Mirror
      language: CSharp
      name:
        CSharp: Mirror
        VB: Mirror
      nameWithType:
        CSharp: VariaRandomValue.Mirror
        VB: VariaRandomValue.Mirror
      qualifiedName:
        CSharp: Varia.VariaRandomValue.Mirror
        VB: Varia.VariaRandomValue.Mirror
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Mirror
        path: ''
        startLine: 1086
      syntax:
        content:
          CSharp: public VariaMirror Mirror { get; }
          VB: Public ReadOnly Property Mirror As VariaMirror
        parameters: []
        return:
          type: Varia.VariaMirror
      overload: Varia.VariaRandomValue.Mirror*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Varia.VariaComparison
    commentId: T:Varia.VariaComparison
    language: CSharp
    name:
      CSharp: VariaComparison
      VB: VariaComparison
    nameWithType:
      CSharp: VariaComparison
      VB: VariaComparison
    qualifiedName:
      CSharp: Varia.VariaComparison
      VB: Varia.VariaComparison
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaComparison
      path: ''
      startLine: 1091
    syntax:
      content:
        CSharp: public enum VariaComparison
        VB: Public Enum VariaComparison
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Varia.VariaComparison.LessThan
      commentId: F:Varia.VariaComparison.LessThan
      language: CSharp
      name:
        CSharp: LessThan
        VB: LessThan
      nameWithType:
        CSharp: VariaComparison.LessThan
        VB: VariaComparison.LessThan
      qualifiedName:
        CSharp: Varia.VariaComparison.LessThan
        VB: Varia.VariaComparison.LessThan
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: LessThan
        path: ''
        startLine: 1093
      syntax:
        content:
          CSharp: LessThan = 0
          VB: LessThan = 0
        return:
          type: Varia.VariaComparison
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaComparison.LessThanOrEquals
      commentId: F:Varia.VariaComparison.LessThanOrEquals
      language: CSharp
      name:
        CSharp: LessThanOrEquals
        VB: LessThanOrEquals
      nameWithType:
        CSharp: VariaComparison.LessThanOrEquals
        VB: VariaComparison.LessThanOrEquals
      qualifiedName:
        CSharp: Varia.VariaComparison.LessThanOrEquals
        VB: Varia.VariaComparison.LessThanOrEquals
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: LessThanOrEquals
        path: ''
        startLine: 1094
      syntax:
        content:
          CSharp: LessThanOrEquals = 1
          VB: LessThanOrEquals = 1
        return:
          type: Varia.VariaComparison
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaComparison.GreaterThan
      commentId: F:Varia.VariaComparison.GreaterThan
      language: CSharp
      name:
        CSharp: GreaterThan
        VB: GreaterThan
      nameWithType:
        CSharp: VariaComparison.GreaterThan
        VB: VariaComparison.GreaterThan
      qualifiedName:
        CSharp: Varia.VariaComparison.GreaterThan
        VB: Varia.VariaComparison.GreaterThan
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: GreaterThan
        path: ''
        startLine: 1095
      syntax:
        content:
          CSharp: GreaterThan = 2
          VB: GreaterThan = 2
        return:
          type: Varia.VariaComparison
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaComparison.GreaterThanOrEquals
      commentId: F:Varia.VariaComparison.GreaterThanOrEquals
      language: CSharp
      name:
        CSharp: GreaterThanOrEquals
        VB: GreaterThanOrEquals
      nameWithType:
        CSharp: VariaComparison.GreaterThanOrEquals
        VB: VariaComparison.GreaterThanOrEquals
      qualifiedName:
        CSharp: Varia.VariaComparison.GreaterThanOrEquals
        VB: Varia.VariaComparison.GreaterThanOrEquals
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: GreaterThanOrEquals
        path: ''
        startLine: 1096
      syntax:
        content:
          CSharp: GreaterThanOrEquals = 3
          VB: GreaterThanOrEquals = 3
        return:
          type: Varia.VariaComparison
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaComparison.Equals
      commentId: F:Varia.VariaComparison.Equals
      language: CSharp
      name:
        CSharp: Equals
        VB: Equals
      nameWithType:
        CSharp: VariaComparison.Equals
        VB: VariaComparison.Equals
      qualifiedName:
        CSharp: Varia.VariaComparison.Equals
        VB: Varia.VariaComparison.Equals
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Equals
        path: ''
        startLine: 1097
      syntax:
        content:
          CSharp: Equals = 4
          VB: Equals = 4
        return:
          type: Varia.VariaComparison
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaComparison.NotEquals
      commentId: F:Varia.VariaComparison.NotEquals
      language: CSharp
      name:
        CSharp: NotEquals
        VB: NotEquals
      nameWithType:
        CSharp: VariaComparison.NotEquals
        VB: VariaComparison.NotEquals
      qualifiedName:
        CSharp: Varia.VariaComparison.NotEquals
        VB: Varia.VariaComparison.NotEquals
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: NotEquals
        path: ''
        startLine: 1098
      syntax:
        content:
          CSharp: NotEquals = 5
          VB: NotEquals = 5
        return:
          type: Varia.VariaComparison
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Varia.VariaCondition
    commentId: T:Varia.VariaCondition
    language: CSharp
    name:
      CSharp: VariaCondition
      VB: VariaCondition
    nameWithType:
      CSharp: VariaCondition
      VB: VariaCondition
    qualifiedName:
      CSharp: Varia.VariaCondition
      VB: Varia.VariaCondition
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaCondition
      path: ''
      startLine: 1106
    syntax:
      content:
        CSharp: public class VariaCondition
        VB: Public Class VariaCondition
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaCondition.conditionType
      commentId: F:Varia.VariaCondition.conditionType
      language: CSharp
      name:
        CSharp: conditionType
        VB: conditionType
      nameWithType:
        CSharp: VariaCondition.conditionType
        VB: VariaCondition.conditionType
      qualifiedName:
        CSharp: Varia.VariaCondition.conditionType
        VB: Varia.VariaCondition.conditionType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: conditionType
        path: ''
        startLine: 1109
      syntax:
        content:
          CSharp: public VariaConditionType conditionType
          VB: Public conditionType As VariaConditionType
        return:
          type: Varia.VariaConditionType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaCondition.randomChance
      commentId: F:Varia.VariaCondition.randomChance
      language: CSharp
      name:
        CSharp: randomChance
        VB: randomChance
      nameWithType:
        CSharp: VariaCondition.randomChance
        VB: VariaCondition.randomChance
      qualifiedName:
        CSharp: Varia.VariaCondition.randomChance
        VB: Varia.VariaCondition.randomChance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: randomChance
        path: ''
        startLine: 1112
      syntax:
        content:
          CSharp: public float randomChance
          VB: Public randomChance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaCondition.comparison
      commentId: F:Varia.VariaCondition.comparison
      language: CSharp
      name:
        CSharp: comparison
        VB: comparison
      nameWithType:
        CSharp: VariaCondition.comparison
        VB: VariaCondition.comparison
      qualifiedName:
        CSharp: Varia.VariaCondition.comparison
        VB: Varia.VariaCondition.comparison
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: comparison
        path: ''
        startLine: 1114
      syntax:
        content:
          CSharp: public VariaComparison comparison
          VB: Public comparison As VariaComparison
        return:
          type: Varia.VariaComparison
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaCondition.depth
      commentId: F:Varia.VariaCondition.depth
      language: CSharp
      name:
        CSharp: depth
        VB: depth
      nameWithType:
        CSharp: VariaCondition.depth
        VB: VariaCondition.depth
      qualifiedName:
        CSharp: Varia.VariaCondition.depth
        VB: Varia.VariaCondition.depth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: depth
        path: ''
        startLine: 1117
      syntax:
        content:
          CSharp: public int depth
          VB: Public depth As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Varia.VariaConditionList
    commentId: T:Varia.VariaConditionList
    language: CSharp
    name:
      CSharp: VariaConditionList
      VB: VariaConditionList
    nameWithType:
      CSharp: VariaConditionList
      VB: VariaConditionList
    qualifiedName:
      CSharp: Varia.VariaConditionList
      VB: Varia.VariaConditionList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaConditionList
      path: ''
      startLine: 1125
    syntax:
      content:
        CSharp: public class VariaConditionList
        VB: Public Class VariaConditionList
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaConditionList.conditions
      commentId: F:Varia.VariaConditionList.conditions
      language: CSharp
      name:
        CSharp: conditions
        VB: conditions
      nameWithType:
        CSharp: VariaConditionList.conditions
        VB: VariaConditionList.conditions
      qualifiedName:
        CSharp: Varia.VariaConditionList.conditions
        VB: Varia.VariaConditionList.conditions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: conditions
        path: ''
        startLine: 1128
      syntax:
        content:
          CSharp: public List<VariaCondition> conditions
          VB: Public conditions As List(Of VariaCondition)
        return:
          type: System.Collections.Generic.List{Varia.VariaCondition}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Varia.VariaConditionType
    commentId: T:Varia.VariaConditionType
    language: CSharp
    name:
      CSharp: VariaConditionType
      VB: VariaConditionType
    nameWithType:
      CSharp: VariaConditionType
      VB: VariaConditionType
    qualifiedName:
      CSharp: Varia.VariaConditionType
      VB: Varia.VariaConditionType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaConditionType
      path: ''
      startLine: 1133
    syntax:
      content:
        CSharp: public enum VariaConditionType
        VB: Public Enum VariaConditionType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Varia.VariaConditionType.Random
      commentId: F:Varia.VariaConditionType.Random
      language: CSharp
      name:
        CSharp: Random
        VB: Random
      nameWithType:
        CSharp: VariaConditionType.Random
        VB: VariaConditionType.Random
      qualifiedName:
        CSharp: Varia.VariaConditionType.Random
        VB: Varia.VariaConditionType.Random
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Random
        path: ''
        startLine: 1135
      syntax:
        content:
          CSharp: Random = 0
          VB: Random = 0
        return:
          type: Varia.VariaConditionType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Varia.VariaConditionType.DepthFilter
      commentId: F:Varia.VariaConditionType.DepthFilter
      language: CSharp
      name:
        CSharp: DepthFilter
        VB: DepthFilter
      nameWithType:
        CSharp: VariaConditionType.DepthFilter
        VB: VariaConditionType.DepthFilter
      qualifiedName:
        CSharp: Varia.VariaConditionType.DepthFilter
        VB: Varia.VariaConditionType.DepthFilter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: DepthFilter
        path: ''
        startLine: 1136
      syntax:
        content:
          CSharp: DepthFilter = 1
          VB: DepthFilter = 1
        return:
          type: Varia.VariaConditionType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Varia.VariaContext
    commentId: T:Varia.VariaContext
    language: CSharp
    name:
      CSharp: VariaContext
      VB: VariaContext
    nameWithType:
      CSharp: VariaContext
      VB: VariaContext
    qualifiedName:
      CSharp: Varia.VariaContext
      VB: Varia.VariaContext
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaContext
      path: ''
      startLine: 1146
    syntax:
      content:
        CSharp: public class VariaContext
        VB: Public Class VariaContext
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaContext.current
      commentId: P:Varia.VariaContext.current
      language: CSharp
      name:
        CSharp: current
        VB: current
      nameWithType:
        CSharp: VariaContext.current
        VB: VariaContext.current
      qualifiedName:
        CSharp: Varia.VariaContext.current
        VB: Varia.VariaContext.current
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: current
        path: ''
        startLine: 1150
      syntax:
        content:
          CSharp: public static VariaContext current { get; }
          VB: Public Shared ReadOnly Property current As VariaContext
        parameters: []
        return:
          type: Varia.VariaContext
      overload: Varia.VariaContext.current*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Varia.VariaContext.#ctor
      commentId: M:Varia.VariaContext.#ctor
      language: CSharp
      name:
        CSharp: VariaContext()
        VB: VariaContext()
      nameWithType:
        CSharp: VariaContext.VariaContext()
        VB: VariaContext.VariaContext()
      qualifiedName:
        CSharp: Varia.VariaContext.VariaContext()
        VB: Varia.VariaContext.VariaContext()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: .ctor
        path: ''
        startLine: 1163
      syntax:
        content:
          CSharp: public VariaContext()
          VB: Public Sub New
      overload: Varia.VariaContext.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaContext.depth
      commentId: P:Varia.VariaContext.depth
      language: CSharp
      name:
        CSharp: depth
        VB: depth
      nameWithType:
        CSharp: VariaContext.depth
        VB: VariaContext.depth
      qualifiedName:
        CSharp: Varia.VariaContext.depth
        VB: Varia.VariaContext.depth
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: depth
        path: ''
        startLine: 1170
      syntax:
        content:
          CSharp: public int depth { get; }
          VB: Public ReadOnly Property depth As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Varia.VariaContext.depth*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Varia.VariaContext.log
      commentId: P:Varia.VariaContext.log
      language: CSharp
      name:
        CSharp: log
        VB: log
      nameWithType:
        CSharp: VariaContext.log
        VB: VariaContext.log
      qualifiedName:
        CSharp: Varia.VariaContext.log
        VB: Varia.VariaContext.log
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: log
        path: ''
        startLine: 1172
      syntax:
        content:
          CSharp: public bool log { get; set; }
          VB: Public Property log As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Varia.VariaContext.log*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Varia.VariaContext.recordUndo
      commentId: P:Varia.VariaContext.recordUndo
      language: CSharp
      name:
        CSharp: recordUndo
        VB: recordUndo
      nameWithType:
        CSharp: VariaContext.recordUndo
        VB: VariaContext.recordUndo
      qualifiedName:
        CSharp: Varia.VariaContext.recordUndo
        VB: Varia.VariaContext.recordUndo
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: recordUndo
        path: ''
        startLine: 1173
      syntax:
        content:
          CSharp: public bool recordUndo { get; set; }
          VB: Public Property recordUndo As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Varia.VariaContext.recordUndo*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Varia.VariaContext.randomState
      commentId: F:Varia.VariaContext.randomState
      language: CSharp
      name:
        CSharp: randomState
        VB: randomState
      nameWithType:
        CSharp: VariaContext.randomState
        VB: VariaContext.randomState
      qualifiedName:
        CSharp: Varia.VariaContext.randomState
        VB: Varia.VariaContext.randomState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: randomState
        path: ''
        startLine: 1175
      syntax:
        content:
          CSharp: public Random.State randomState
          VB: Public randomState As Random.State
        return:
          type: Random.State
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaContext.Instantiate(GameObject,Transform,System.Boolean)
      commentId: M:Varia.VariaContext.Instantiate(GameObject,Transform,System.Boolean)
      language: CSharp
      name:
        CSharp: Instantiate(GameObject, Transform, Boolean)
        VB: Instantiate(GameObject, Transform, Boolean)
      nameWithType:
        CSharp: VariaContext.Instantiate(GameObject, Transform, Boolean)
        VB: VariaContext.Instantiate(GameObject, Transform, Boolean)
      qualifiedName:
        CSharp: Varia.VariaContext.Instantiate(GameObject, Transform, System.Boolean)
        VB: Varia.VariaContext.Instantiate(GameObject, Transform, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Instantiate
        path: ''
        startLine: 1177
      syntax:
        content:
          CSharp: public GameObject Instantiate(GameObject original, Transform parent, bool worldPositionStays)
          VB: Public Function Instantiate(original As GameObject, parent As Transform, worldPositionStays As Boolean) As GameObject
        parameters:
        - id: original
          type: GameObject
        - id: parent
          type: Transform
        - id: worldPositionStays
          type: System.Boolean
        return:
          type: GameObject
      overload: Varia.VariaContext.Instantiate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaContext.Instantiate(GameObject,Transform)
      commentId: M:Varia.VariaContext.Instantiate(GameObject,Transform)
      language: CSharp
      name:
        CSharp: Instantiate(GameObject, Transform)
        VB: Instantiate(GameObject, Transform)
      nameWithType:
        CSharp: VariaContext.Instantiate(GameObject, Transform)
        VB: VariaContext.Instantiate(GameObject, Transform)
      qualifiedName:
        CSharp: Varia.VariaContext.Instantiate(GameObject, Transform)
        VB: Varia.VariaContext.Instantiate(GameObject, Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Instantiate
        path: ''
        startLine: 1181
      syntax:
        content:
          CSharp: public GameObject Instantiate(GameObject original, Transform parent)
          VB: Public Function Instantiate(original As GameObject, parent As Transform) As GameObject
        parameters:
        - id: original
          type: GameObject
        - id: parent
          type: Transform
        return:
          type: GameObject
      overload: Varia.VariaContext.Instantiate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaContext.Instantiate(GameObject,Vector3,Quaternion,Transform)
      commentId: M:Varia.VariaContext.Instantiate(GameObject,Vector3,Quaternion,Transform)
      language: CSharp
      name:
        CSharp: Instantiate(GameObject, Vector3, Quaternion, Transform)
        VB: Instantiate(GameObject, Vector3, Quaternion, Transform)
      nameWithType:
        CSharp: VariaContext.Instantiate(GameObject, Vector3, Quaternion, Transform)
        VB: VariaContext.Instantiate(GameObject, Vector3, Quaternion, Transform)
      qualifiedName:
        CSharp: Varia.VariaContext.Instantiate(GameObject, Vector3, Quaternion, Transform)
        VB: Varia.VariaContext.Instantiate(GameObject, Vector3, Quaternion, Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Instantiate
        path: ''
        startLine: 1185
      syntax:
        content:
          CSharp: public GameObject Instantiate(GameObject original, Vector3 position, Quaternion rotation, Transform parent)
          VB: Public Function Instantiate(original As GameObject, position As Vector3, rotation As Quaternion, parent As Transform) As GameObject
        parameters:
        - id: original
          type: GameObject
        - id: position
          type: Vector3
        - id: rotation
          type: Quaternion
        - id: parent
          type: Transform
        return:
          type: GameObject
      overload: Varia.VariaContext.Instantiate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaContext.Instantiate(GameObject,Vector3,Quaternion)
      commentId: M:Varia.VariaContext.Instantiate(GameObject,Vector3,Quaternion)
      language: CSharp
      name:
        CSharp: Instantiate(GameObject, Vector3, Quaternion)
        VB: Instantiate(GameObject, Vector3, Quaternion)
      nameWithType:
        CSharp: VariaContext.Instantiate(GameObject, Vector3, Quaternion)
        VB: VariaContext.Instantiate(GameObject, Vector3, Quaternion)
      qualifiedName:
        CSharp: Varia.VariaContext.Instantiate(GameObject, Vector3, Quaternion)
        VB: Varia.VariaContext.Instantiate(GameObject, Vector3, Quaternion)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Instantiate
        path: ''
        startLine: 1189
      syntax:
        content:
          CSharp: public GameObject Instantiate(GameObject original, Vector3 position, Quaternion rotation)
          VB: Public Function Instantiate(original As GameObject, position As Vector3, rotation As Quaternion) As GameObject
        parameters:
        - id: original
          type: GameObject
        - id: position
          type: Vector3
        - id: rotation
          type: Quaternion
        return:
          type: GameObject
      overload: Varia.VariaContext.Instantiate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaContext.Instantiate(GameObject)
      commentId: M:Varia.VariaContext.Instantiate(GameObject)
      language: CSharp
      name:
        CSharp: Instantiate(GameObject)
        VB: Instantiate(GameObject)
      nameWithType:
        CSharp: VariaContext.Instantiate(GameObject)
        VB: VariaContext.Instantiate(GameObject)
      qualifiedName:
        CSharp: Varia.VariaContext.Instantiate(GameObject)
        VB: Varia.VariaContext.Instantiate(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Instantiate
        path: ''
        startLine: 1193
      syntax:
        content:
          CSharp: public GameObject Instantiate(GameObject original)
          VB: Public Function Instantiate(original As GameObject) As GameObject
        parameters:
        - id: original
          type: GameObject
        return:
          type: GameObject
      overload: Varia.VariaContext.Instantiate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaContext.Freeze(GameObject)
      commentId: M:Varia.VariaContext.Freeze(GameObject)
      language: CSharp
      name:
        CSharp: Freeze(GameObject)
        VB: Freeze(GameObject)
      nameWithType:
        CSharp: VariaContext.Freeze(GameObject)
        VB: VariaContext.Freeze(GameObject)
      qualifiedName:
        CSharp: Varia.VariaContext.Freeze(GameObject)
        VB: Varia.VariaContext.Freeze(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Freeze
        path: ''
        startLine: 1299
      syntax:
        content:
          CSharp: public void Freeze(GameObject go)
          VB: Public Sub Freeze(go As GameObject)
        parameters:
        - id: go
          type: GameObject
      overload: Varia.VariaContext.Freeze*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Varia.VariaProperty
    commentId: T:Varia.VariaProperty
    language: CSharp
    name:
      CSharp: VariaProperty
      VB: VariaProperty
    nameWithType:
      CSharp: VariaProperty
      VB: VariaProperty
    qualifiedName:
      CSharp: Varia.VariaProperty
      VB: Varia.VariaProperty
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaProperty
      path: ''
      startLine: 1438
    summary: "\nA cut down version of System.Reflection.PropertyInfo\n"
    example: []
    syntax:
      content:
        CSharp: public class VariaProperty
        VB: Public Class VariaProperty
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaProperty.name
      commentId: F:Varia.VariaProperty.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: VariaProperty.name
        VB: VariaProperty.name
      qualifiedName:
        CSharp: Varia.VariaProperty.name
        VB: Varia.VariaProperty.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: name
        path: ''
        startLine: 1440
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaProperty.expression
      commentId: F:Varia.VariaProperty.expression
      language: CSharp
      name:
        CSharp: expression
        VB: expression
      nameWithType:
        CSharp: VariaProperty.expression
        VB: VariaProperty.expression
      qualifiedName:
        CSharp: Varia.VariaProperty.expression
        VB: Varia.VariaProperty.expression
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: expression
        path: ''
        startLine: 1442
      syntax:
        content:
          CSharp: public string expression
          VB: Public expression As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaProperty.propertyType
      commentId: F:Varia.VariaProperty.propertyType
      language: CSharp
      name:
        CSharp: propertyType
        VB: propertyType
      nameWithType:
        CSharp: VariaProperty.propertyType
        VB: VariaProperty.propertyType
      qualifiedName:
        CSharp: Varia.VariaProperty.propertyType
        VB: Varia.VariaProperty.propertyType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: propertyType
        path: ''
        startLine: 1444
      syntax:
        content:
          CSharp: public Type propertyType
          VB: Public propertyType As Type
        return:
          type: Type
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaProperty.canWrite
      commentId: F:Varia.VariaProperty.canWrite
      language: CSharp
      name:
        CSharp: canWrite
        VB: canWrite
      nameWithType:
        CSharp: VariaProperty.canWrite
        VB: VariaProperty.canWrite
      qualifiedName:
        CSharp: Varia.VariaProperty.canWrite
        VB: Varia.VariaProperty.canWrite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: canWrite
        path: ''
        startLine: 1446
      syntax:
        content:
          CSharp: public bool canWrite
          VB: Public canWrite As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaProperty.canRead
      commentId: F:Varia.VariaProperty.canRead
      language: CSharp
      name:
        CSharp: canRead
        VB: canRead
      nameWithType:
        CSharp: VariaProperty.canRead
        VB: VariaProperty.canRead
      qualifiedName:
        CSharp: Varia.VariaProperty.canRead
        VB: Varia.VariaProperty.canRead
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: canRead
        path: ''
        startLine: 1448
      syntax:
        content:
          CSharp: public bool canRead
          VB: Public canRead As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Varia.VariaMirror
    commentId: T:Varia.VariaMirror
    language: CSharp
    name:
      CSharp: VariaMirror
      VB: VariaMirror
    nameWithType:
      CSharp: VariaMirror
      VB: VariaMirror
    qualifiedName:
      CSharp: Varia.VariaMirror
      VB: Varia.VariaMirror
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaMirror
      path: ''
      startLine: 1454
    summary: "\nAbstraction for a a readable or writable property of a given instance.\n"
    example: []
    syntax:
      content:
        CSharp: public class VariaMirror
        VB: Public Class VariaMirror
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Varia.VariaMirror.propertyType
      commentId: F:Varia.VariaMirror.propertyType
      language: CSharp
      name:
        CSharp: propertyType
        VB: propertyType
      nameWithType:
        CSharp: VariaMirror.propertyType
        VB: VariaMirror.propertyType
      qualifiedName:
        CSharp: Varia.VariaMirror.propertyType
        VB: Varia.VariaMirror.propertyType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: propertyType
        path: ''
        startLine: 1456
      syntax:
        content:
          CSharp: public Type propertyType
          VB: Public propertyType As Type
        return:
          type: Type
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaMirror.setValue
      commentId: F:Varia.VariaMirror.setValue
      language: CSharp
      name:
        CSharp: setValue
        VB: setValue
      nameWithType:
        CSharp: VariaMirror.setValue
        VB: VariaMirror.setValue
      qualifiedName:
        CSharp: Varia.VariaMirror.setValue
        VB: Varia.VariaMirror.setValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: setValue
        path: ''
        startLine: 1458
      syntax:
        content:
          CSharp: public Action<object, object> setValue
          VB: Public setValue As Action(Of Object, Object)
        return:
          type: Action{System.Object,System.Object}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Varia.VariaMirror.getValue
      commentId: F:Varia.VariaMirror.getValue
      language: CSharp
      name:
        CSharp: getValue
        VB: getValue
      nameWithType:
        CSharp: VariaMirror.getValue
        VB: VariaMirror.getValue
      qualifiedName:
        CSharp: Varia.VariaMirror.getValue
        VB: Varia.VariaMirror.getValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: getValue
        path: ''
        startLine: 1460
      syntax:
        content:
          CSharp: public Func<object, object> getValue
          VB: Public getValue As Func(Of Object, Object)
        return:
          type: Func{System.Object,System.Object}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Varia.VariaReflection
    commentId: T:Varia.VariaReflection
    language: CSharp
    name:
      CSharp: VariaReflection
      VB: VariaReflection
    nameWithType:
      CSharp: VariaReflection
      VB: VariaReflection
    qualifiedName:
      CSharp: Varia.VariaReflection
      VB: Varia.VariaReflection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaReflection
      path: ''
      startLine: 1481
    summary: "\nVariaReflection is a simplified version of C# reflection, with an emphasis on reading and writing.\n\nThe main feature is given a expression, it lets you read and write values for the field corresponding to that expression.\nAn expression is build as follows:\nexpression ::= property_name |\n             property_name &quot;.&quot; expression |\n             &quot;propertyBlock&quot; &quot;.&quot; material_property_name &quot;.&quot; type\n\nThe first form indicates a property of the target object itself.\nThe second form evaluates the sub-expression on the value of named property of the target object.\nThe third form corresponds to Renderer.SetPropertyBlock (https://docs.unity3d.com/ScriptReference/Renderer.SetPropertyBlock.html)\n\nMaterial property block properties behave particularly strangely:\n* They must have the type encoded in the name as it&apos;s not available at runtime.\n* They are not listed when exploring the properties of an object (though you can use VariaMaterialPropertyBlockReflection to get them)\n\n"
    example: []
    syntax:
      content:
        CSharp: public static class VariaReflection
        VB: Public Module VariaReflection
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Varia.VariaReflection.GetProperties(Type)
      commentId: M:Varia.VariaReflection.GetProperties(Type)
      language: CSharp
      name:
        CSharp: GetProperties(Type)
        VB: GetProperties(Type)
      nameWithType:
        CSharp: VariaReflection.GetProperties(Type)
        VB: VariaReflection.GetProperties(Type)
      qualifiedName:
        CSharp: Varia.VariaReflection.GetProperties(Type)
        VB: Varia.VariaReflection.GetProperties(Type)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: GetProperties
        path: ''
        startLine: 1518
      syntax:
        content:
          CSharp: public static List<VariaProperty> GetProperties(Type targetType)
          VB: Public Shared Function GetProperties(targetType As Type) As List(Of VariaProperty)
        parameters:
        - id: targetType
          type: Type
        return:
          type: System.Collections.Generic.List{Varia.VariaProperty}
      overload: Varia.VariaReflection.GetProperties*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Varia.VariaReflection.SetValue(System.Object,System.String,System.Object)
      commentId: M:Varia.VariaReflection.SetValue(System.Object,System.String,System.Object)
      language: CSharp
      name:
        CSharp: SetValue(Object, String, Object)
        VB: SetValue(Object, String, Object)
      nameWithType:
        CSharp: VariaReflection.SetValue(Object, String, Object)
        VB: VariaReflection.SetValue(Object, String, Object)
      qualifiedName:
        CSharp: Varia.VariaReflection.SetValue(System.Object, System.String, System.Object)
        VB: Varia.VariaReflection.SetValue(System.Object, System.String, System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: SetValue
        path: ''
        startLine: 1528
      syntax:
        content:
          CSharp: public static void SetValue(object o, string expression, object value)
          VB: Public Shared Sub SetValue(o As Object, expression As String, value As Object)
        parameters:
        - id: o
          type: System.Object
        - id: expression
          type: System.String
        - id: value
          type: System.Object
      overload: Varia.VariaReflection.SetValue*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Varia.VariaReflection.GetValue(System.Object,System.String)
      commentId: M:Varia.VariaReflection.GetValue(System.Object,System.String)
      language: CSharp
      name:
        CSharp: GetValue(Object, String)
        VB: GetValue(Object, String)
      nameWithType:
        CSharp: VariaReflection.GetValue(Object, String)
        VB: VariaReflection.GetValue(Object, String)
      qualifiedName:
        CSharp: Varia.VariaReflection.GetValue(System.Object, System.String)
        VB: Varia.VariaReflection.GetValue(System.Object, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: GetValue
        path: ''
        startLine: 1533
      syntax:
        content:
          CSharp: public static object GetValue(object o, string expression)
          VB: Public Shared Function GetValue(o As Object, expression As String) As Object
        parameters:
        - id: o
          type: System.Object
        - id: expression
          type: System.String
        return:
          type: System.Object
      overload: Varia.VariaReflection.GetValue*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Varia.VariaReflection.EvalExpressionOrThrow(Type,System.String)
      commentId: M:Varia.VariaReflection.EvalExpressionOrThrow(Type,System.String)
      language: CSharp
      name:
        CSharp: EvalExpressionOrThrow(Type, String)
        VB: EvalExpressionOrThrow(Type, String)
      nameWithType:
        CSharp: VariaReflection.EvalExpressionOrThrow(Type, String)
        VB: VariaReflection.EvalExpressionOrThrow(Type, String)
      qualifiedName:
        CSharp: Varia.VariaReflection.EvalExpressionOrThrow(Type, System.String)
        VB: Varia.VariaReflection.EvalExpressionOrThrow(Type, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: EvalExpressionOrThrow
        path: ''
        startLine: 1593
      syntax:
        content:
          CSharp: public static VariaMirror EvalExpressionOrThrow(Type targetType, string expression)
          VB: Public Shared Function EvalExpressionOrThrow(targetType As Type, expression As String) As VariaMirror
        parameters:
        - id: targetType
          type: Type
        - id: expression
          type: System.String
        return:
          type: Varia.VariaMirror
      overload: Varia.VariaReflection.EvalExpressionOrThrow*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Varia.VariaReflection.EvalExpression(Type,System.String)
      commentId: M:Varia.VariaReflection.EvalExpression(Type,System.String)
      language: CSharp
      name:
        CSharp: EvalExpression(Type, String)
        VB: EvalExpression(Type, String)
      nameWithType:
        CSharp: VariaReflection.EvalExpression(Type, String)
        VB: VariaReflection.EvalExpression(Type, String)
      qualifiedName:
        CSharp: Varia.VariaReflection.EvalExpression(Type, System.String)
        VB: Varia.VariaReflection.EvalExpression(Type, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: EvalExpression
        path: ''
        startLine: 1604
      syntax:
        content:
          CSharp: public static VariaMirror EvalExpression(Type targetType, string expression)
          VB: Public Shared Function EvalExpression(targetType As Type, expression As String) As VariaMirror
        parameters:
        - id: targetType
          type: Type
        - id: expression
          type: System.String
        return:
          type: Varia.VariaMirror
      overload: Varia.VariaReflection.EvalExpression*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Varia.VariaUtils
    commentId: T:Varia.VariaUtils
    language: CSharp
    name:
      CSharp: VariaUtils
      VB: VariaUtils
    nameWithType:
      CSharp: VariaUtils
      VB: VariaUtils
    qualifiedName:
      CSharp: Varia.VariaUtils
      VB: Varia.VariaUtils
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Varia
    source:
      id: VariaUtils
      path: ''
      startLine: 1860
    syntax:
      content:
        CSharp: public static class VariaUtils
        VB: Public Module VariaUtils
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Varia.VariaUtils.Instantiate(GameObject,Transform,System.Boolean)
      commentId: M:Varia.VariaUtils.Instantiate(GameObject,Transform,System.Boolean)
      language: CSharp
      name:
        CSharp: Instantiate(GameObject, Transform, Boolean)
        VB: Instantiate(GameObject, Transform, Boolean)
      nameWithType:
        CSharp: VariaUtils.Instantiate(GameObject, Transform, Boolean)
        VB: VariaUtils.Instantiate(GameObject, Transform, Boolean)
      qualifiedName:
        CSharp: Varia.VariaUtils.Instantiate(GameObject, Transform, System.Boolean)
        VB: Varia.VariaUtils.Instantiate(GameObject, Transform, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Instantiate
        path: ''
        startLine: 1865
      summary: "\nSame behaviour as GameObject.Instantiate\n"
      example: []
      syntax:
        content:
          CSharp: public static GameObject Instantiate(GameObject original, Transform parent, bool worldPositionStays)
          VB: Public Shared Function Instantiate(original As GameObject, parent As Transform, worldPositionStays As Boolean) As GameObject
        parameters:
        - id: original
          type: GameObject
        - id: parent
          type: Transform
        - id: worldPositionStays
          type: System.Boolean
        return:
          type: GameObject
      overload: Varia.VariaUtils.Instantiate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Varia.VariaUtils.Instantiate(GameObject,Transform)
      commentId: M:Varia.VariaUtils.Instantiate(GameObject,Transform)
      language: CSharp
      name:
        CSharp: Instantiate(GameObject, Transform)
        VB: Instantiate(GameObject, Transform)
      nameWithType:
        CSharp: VariaUtils.Instantiate(GameObject, Transform)
        VB: VariaUtils.Instantiate(GameObject, Transform)
      qualifiedName:
        CSharp: Varia.VariaUtils.Instantiate(GameObject, Transform)
        VB: Varia.VariaUtils.Instantiate(GameObject, Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Instantiate
        path: ''
        startLine: 1873
      summary: "\nSame behaviour as GameObject.Instantiate\n"
      example: []
      syntax:
        content:
          CSharp: public static GameObject Instantiate(GameObject original, Transform parent)
          VB: Public Shared Function Instantiate(original As GameObject, parent As Transform) As GameObject
        parameters:
        - id: original
          type: GameObject
        - id: parent
          type: Transform
        return:
          type: GameObject
      overload: Varia.VariaUtils.Instantiate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Varia.VariaUtils.Instantiate(GameObject,Vector3,Quaternion,Transform)
      commentId: M:Varia.VariaUtils.Instantiate(GameObject,Vector3,Quaternion,Transform)
      language: CSharp
      name:
        CSharp: Instantiate(GameObject, Vector3, Quaternion, Transform)
        VB: Instantiate(GameObject, Vector3, Quaternion, Transform)
      nameWithType:
        CSharp: VariaUtils.Instantiate(GameObject, Vector3, Quaternion, Transform)
        VB: VariaUtils.Instantiate(GameObject, Vector3, Quaternion, Transform)
      qualifiedName:
        CSharp: Varia.VariaUtils.Instantiate(GameObject, Vector3, Quaternion, Transform)
        VB: Varia.VariaUtils.Instantiate(GameObject, Vector3, Quaternion, Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Instantiate
        path: ''
        startLine: 1881
      summary: "\nSame behaviour as GameObject.Instantiate\n"
      example: []
      syntax:
        content:
          CSharp: public static GameObject Instantiate(GameObject original, Vector3 position, Quaternion rotation, Transform parent)
          VB: Public Shared Function Instantiate(original As GameObject, position As Vector3, rotation As Quaternion, parent As Transform) As GameObject
        parameters:
        - id: original
          type: GameObject
        - id: position
          type: Vector3
        - id: rotation
          type: Quaternion
        - id: parent
          type: Transform
        return:
          type: GameObject
      overload: Varia.VariaUtils.Instantiate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Varia.VariaUtils.Instantiate(GameObject,Vector3,Quaternion)
      commentId: M:Varia.VariaUtils.Instantiate(GameObject,Vector3,Quaternion)
      language: CSharp
      name:
        CSharp: Instantiate(GameObject, Vector3, Quaternion)
        VB: Instantiate(GameObject, Vector3, Quaternion)
      nameWithType:
        CSharp: VariaUtils.Instantiate(GameObject, Vector3, Quaternion)
        VB: VariaUtils.Instantiate(GameObject, Vector3, Quaternion)
      qualifiedName:
        CSharp: Varia.VariaUtils.Instantiate(GameObject, Vector3, Quaternion)
        VB: Varia.VariaUtils.Instantiate(GameObject, Vector3, Quaternion)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Instantiate
        path: ''
        startLine: 1889
      summary: "\nSame behaviour as GameObject.Instantiate\n"
      example: []
      syntax:
        content:
          CSharp: public static GameObject Instantiate(GameObject original, Vector3 position, Quaternion rotation)
          VB: Public Shared Function Instantiate(original As GameObject, position As Vector3, rotation As Quaternion) As GameObject
        parameters:
        - id: original
          type: GameObject
        - id: position
          type: Vector3
        - id: rotation
          type: Quaternion
        return:
          type: GameObject
      overload: Varia.VariaUtils.Instantiate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Varia.VariaUtils.Instantiate(GameObject)
      commentId: M:Varia.VariaUtils.Instantiate(GameObject)
      language: CSharp
      name:
        CSharp: Instantiate(GameObject)
        VB: Instantiate(GameObject)
      nameWithType:
        CSharp: VariaUtils.Instantiate(GameObject)
        VB: VariaUtils.Instantiate(GameObject)
      qualifiedName:
        CSharp: Varia.VariaUtils.Instantiate(GameObject)
        VB: Varia.VariaUtils.Instantiate(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: Instantiate
        path: ''
        startLine: 1897
      summary: "\nSame behaviour as GameObject.Instantiate\n"
      example: []
      syntax:
        content:
          CSharp: public static GameObject Instantiate(GameObject original)
          VB: Public Shared Function Instantiate(original As GameObject) As GameObject
        parameters:
        - id: original
          type: GameObject
        return:
          type: GameObject
      overload: Varia.VariaUtils.Instantiate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Varia.VariaUtils.GetNamePath(GameObject)
      commentId: M:Varia.VariaUtils.GetNamePath(GameObject)
      language: CSharp
      name:
        CSharp: GetNamePath(GameObject)
        VB: GetNamePath(GameObject)
      nameWithType:
        CSharp: VariaUtils.GetNamePath(GameObject)
        VB: VariaUtils.GetNamePath(GameObject)
      qualifiedName:
        CSharp: Varia.VariaUtils.GetNamePath(GameObject)
        VB: Varia.VariaUtils.GetNamePath(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Varia
      source:
        id: GetNamePath
        path: ''
        startLine: 1905
      summary: "\nGives the name of the all the ancestors of the current game object\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetNamePath(this GameObject go)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetNamePath(go As GameObject) As String
        parameters:
        - id: go
          type: GameObject
        return:
          type: System.String
      overload: Varia.VariaUtils.GetNamePath*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  GameObject:
    name:
      CSharp:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  Varia.VariaPreviewer.Refresh*:
    name:
      CSharp:
      - id: Varia.VariaPreviewer.Refresh*
        name: Refresh
        nameWithType: VariaPreviewer.Refresh
        qualifiedName: Varia.VariaPreviewer.Refresh
      VB:
      - id: Varia.VariaPreviewer.Refresh*
        name: Refresh
        nameWithType: VariaPreviewer.Refresh
        qualifiedName: Varia.VariaPreviewer.Refresh
    isDefinition: true
    commentId: Overload:Varia.VariaPreviewer.Refresh
  Varia.VariaPreviewer:
    name:
      CSharp:
      - id: Varia.VariaPreviewer
        name: VariaPreviewer
        nameWithType: VariaPreviewer
        qualifiedName: Varia.VariaPreviewer
      VB:
      - id: Varia.VariaPreviewer
        name: VariaPreviewer
        nameWithType: VariaPreviewer
        qualifiedName: Varia.VariaPreviewer
    isDefinition: true
    commentId: T:Varia.VariaPreviewer
  Varia.VariaPrototype:
    name:
      CSharp:
      - id: Varia.VariaPrototype
        name: VariaPrototype
        nameWithType: VariaPrototype
        qualifiedName: Varia.VariaPrototype
      VB:
      - id: Varia.VariaPrototype
        name: VariaPrototype
        nameWithType: VariaPrototype
        qualifiedName: Varia.VariaPrototype
    isDefinition: true
    commentId: T:Varia.VariaPrototype
  Varia:
    name:
      CSharp:
      - name: Varia
        nameWithType: Varia
        qualifiedName: Varia
      VB:
      - name: Varia
        nameWithType: Varia
        qualifiedName: Varia
    isDefinition: true
    commentId: N:Varia
  Varia.VariaConditionList:
    name:
      CSharp:
      - id: Varia.VariaConditionList
        name: VariaConditionList
        nameWithType: VariaConditionList
        qualifiedName: Varia.VariaConditionList
      VB:
      - id: Varia.VariaConditionList
        name: VariaConditionList
        nameWithType: VariaConditionList
        qualifiedName: Varia.VariaConditionList
    isDefinition: true
    parent: Varia
    commentId: T:Varia.VariaConditionList
  Varia.VariaBehaviour.OnEnable*:
    name:
      CSharp:
      - id: Varia.VariaBehaviour.OnEnable*
        name: OnEnable
        nameWithType: VariaBehaviour.OnEnable
        qualifiedName: Varia.VariaBehaviour.OnEnable
      VB:
      - id: Varia.VariaBehaviour.OnEnable*
        name: OnEnable
        nameWithType: VariaBehaviour.OnEnable
        qualifiedName: Varia.VariaBehaviour.OnEnable
    isDefinition: true
    commentId: Overload:Varia.VariaBehaviour.OnEnable
  Varia.VariaContext:
    name:
      CSharp:
      - id: Varia.VariaContext
        name: VariaContext
        nameWithType: VariaContext
        qualifiedName: Varia.VariaContext
      VB:
      - id: Varia.VariaContext
        name: VariaContext
        nameWithType: VariaContext
        qualifiedName: Varia.VariaContext
    isDefinition: true
    parent: Varia
    commentId: T:Varia.VariaContext
  Varia.VariaBehaviour.Apply*:
    name:
      CSharp:
      - id: Varia.VariaBehaviour.Apply*
        name: Apply
        nameWithType: VariaBehaviour.Apply
        qualifiedName: Varia.VariaBehaviour.Apply
      VB:
      - id: Varia.VariaBehaviour.Apply*
        name: Apply
        nameWithType: VariaBehaviour.Apply
        qualifiedName: Varia.VariaBehaviour.Apply
    isDefinition: true
    commentId: Overload:Varia.VariaBehaviour.Apply
  Varia.VariaBehaviour.NoApply*:
    name:
      CSharp:
      - id: Varia.VariaBehaviour.NoApply*
        name: NoApply
        nameWithType: VariaBehaviour.NoApply
        qualifiedName: Varia.VariaBehaviour.NoApply
      VB:
      - id: Varia.VariaBehaviour.NoApply*
        name: NoApply
        nameWithType: VariaBehaviour.NoApply
        qualifiedName: Varia.VariaBehaviour.NoApply
    isDefinition: true
    commentId: Overload:Varia.VariaBehaviour.NoApply
  Varia.VariaBehaviour:
    name:
      CSharp:
      - id: Varia.VariaBehaviour
        name: VariaBehaviour
        nameWithType: VariaBehaviour
        qualifiedName: Varia.VariaBehaviour
      VB:
      - id: Varia.VariaBehaviour
        name: VariaBehaviour
        nameWithType: VariaBehaviour
        qualifiedName: Varia.VariaBehaviour
    isDefinition: true
    parent: Varia
    commentId: T:Varia.VariaBehaviour
  Varia.VariaBehaviour.conditionList:
    name:
      CSharp:
      - id: Varia.VariaBehaviour.conditionList
        name: conditionList
        nameWithType: VariaBehaviour.conditionList
        qualifiedName: Varia.VariaBehaviour.conditionList
      VB:
      - id: Varia.VariaBehaviour.conditionList
        name: conditionList
        nameWithType: VariaBehaviour.conditionList
        qualifiedName: Varia.VariaBehaviour.conditionList
    isDefinition: true
    parent: Varia.VariaBehaviour
    commentId: F:Varia.VariaBehaviour.conditionList
  Varia.VariaBehaviour.OnEnable:
    name:
      CSharp:
      - id: Varia.VariaBehaviour.OnEnable
        name: OnEnable
        nameWithType: VariaBehaviour.OnEnable
        qualifiedName: Varia.VariaBehaviour.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Varia.VariaBehaviour.OnEnable
        name: OnEnable
        nameWithType: VariaBehaviour.OnEnable
        qualifiedName: Varia.VariaBehaviour.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Varia.VariaBehaviour
    commentId: M:Varia.VariaBehaviour.OnEnable
  Varia.VariaBehaviour.NoApply(Varia.VariaContext):
    name:
      CSharp:
      - id: Varia.VariaBehaviour.NoApply(Varia.VariaContext)
        name: NoApply
        nameWithType: VariaBehaviour.NoApply
        qualifiedName: Varia.VariaBehaviour.NoApply
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Varia.VariaContext
        name: VariaContext
        nameWithType: VariaContext
        qualifiedName: Varia.VariaContext
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Varia.VariaBehaviour.NoApply(Varia.VariaContext)
        name: NoApply
        nameWithType: VariaBehaviour.NoApply
        qualifiedName: Varia.VariaBehaviour.NoApply
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Varia.VariaContext
        name: VariaContext
        nameWithType: VariaContext
        qualifiedName: Varia.VariaContext
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Varia.VariaBehaviour
    commentId: M:Varia.VariaBehaviour.NoApply(Varia.VariaContext)
  Varia.VariaDestroy.#ctor*:
    name:
      CSharp:
      - id: Varia.VariaDestroy.#ctor*
        name: VariaDestroy
        nameWithType: VariaDestroy.VariaDestroy
        qualifiedName: Varia.VariaDestroy.VariaDestroy
      VB:
      - id: Varia.VariaDestroy.#ctor*
        name: VariaDestroy
        nameWithType: VariaDestroy.VariaDestroy
        qualifiedName: Varia.VariaDestroy.VariaDestroy
    isDefinition: true
    commentId: Overload:Varia.VariaDestroy.#ctor
  Varia.VariaBehaviour.Apply(Varia.VariaContext):
    name:
      CSharp:
      - id: Varia.VariaBehaviour.Apply(Varia.VariaContext)
        name: Apply
        nameWithType: VariaBehaviour.Apply
        qualifiedName: Varia.VariaBehaviour.Apply
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Varia.VariaContext
        name: VariaContext
        nameWithType: VariaContext
        qualifiedName: Varia.VariaContext
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Varia.VariaBehaviour.Apply(Varia.VariaContext)
        name: Apply
        nameWithType: VariaBehaviour.Apply
        qualifiedName: Varia.VariaBehaviour.Apply
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Varia.VariaContext
        name: VariaContext
        nameWithType: VariaContext
        qualifiedName: Varia.VariaContext
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Varia.VariaBehaviour
    commentId: M:Varia.VariaBehaviour.Apply(Varia.VariaContext)
  Varia.VariaDestroy.Apply*:
    name:
      CSharp:
      - id: Varia.VariaDestroy.Apply*
        name: Apply
        nameWithType: VariaDestroy.Apply
        qualifiedName: Varia.VariaDestroy.Apply
      VB:
      - id: Varia.VariaDestroy.Apply*
        name: Apply
        nameWithType: VariaDestroy.Apply
        qualifiedName: Varia.VariaDestroy.Apply
    isDefinition: true
    commentId: Overload:Varia.VariaDestroy.Apply
  Varia.VariaDestroy:
    name:
      CSharp:
      - id: Varia.VariaDestroy
        name: VariaDestroy
        nameWithType: VariaDestroy
        qualifiedName: Varia.VariaDestroy
      VB:
      - id: Varia.VariaDestroy
        name: VariaDestroy
        nameWithType: VariaDestroy
        qualifiedName: Varia.VariaDestroy
    isDefinition: true
    commentId: T:Varia.VariaDestroy
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  Varia.WeightedGameObject:
    name:
      CSharp:
      - id: Varia.WeightedGameObject
        name: WeightedGameObject
        nameWithType: WeightedGameObject
        qualifiedName: Varia.WeightedGameObject
      VB:
      - id: Varia.WeightedGameObject
        name: WeightedGameObject
        nameWithType: WeightedGameObject
        qualifiedName: Varia.WeightedGameObject
    isDefinition: true
    commentId: T:Varia.WeightedGameObject
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{Varia.WeightedGameObject}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Varia.WeightedGameObject
        name: WeightedGameObject
        nameWithType: WeightedGameObject
        qualifiedName: Varia.WeightedGameObject
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Varia.WeightedGameObject
        name: WeightedGameObject
        nameWithType: WeightedGameObject
        qualifiedName: Varia.WeightedGameObject
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Varia.WeightedGameObject}
  Varia.WeightedGameObject.weight:
    commentId: F:Varia.WeightedGameObject.weight
  Varia.VariaInstantiate.#ctor*:
    name:
      CSharp:
      - id: Varia.VariaInstantiate.#ctor*
        name: VariaInstantiate
        nameWithType: VariaInstantiate.VariaInstantiate
        qualifiedName: Varia.VariaInstantiate.VariaInstantiate
      VB:
      - id: Varia.VariaInstantiate.#ctor*
        name: VariaInstantiate
        nameWithType: VariaInstantiate.VariaInstantiate
        qualifiedName: Varia.VariaInstantiate.VariaInstantiate
    isDefinition: true
    commentId: Overload:Varia.VariaInstantiate.#ctor
  Varia.VariaInstantiate.Apply*:
    name:
      CSharp:
      - id: Varia.VariaInstantiate.Apply*
        name: Apply
        nameWithType: VariaInstantiate.Apply
        qualifiedName: Varia.VariaInstantiate.Apply
      VB:
      - id: Varia.VariaInstantiate.Apply*
        name: Apply
        nameWithType: VariaInstantiate.Apply
        qualifiedName: Varia.VariaInstantiate.Apply
    isDefinition: true
    commentId: Overload:Varia.VariaInstantiate.Apply
  Varia.VariaInstantiate:
    name:
      CSharp:
      - id: Varia.VariaInstantiate
        name: VariaInstantiate
        nameWithType: VariaInstantiate
        qualifiedName: Varia.VariaInstantiate
      VB:
      - id: Varia.VariaInstantiate
        name: VariaInstantiate
        nameWithType: VariaInstantiate
        qualifiedName: Varia.VariaInstantiate
    isDefinition: true
    commentId: T:Varia.VariaInstantiate
  Varia.VariaKeep.#ctor*:
    name:
      CSharp:
      - id: Varia.VariaKeep.#ctor*
        name: VariaKeep
        nameWithType: VariaKeep.VariaKeep
        qualifiedName: Varia.VariaKeep.VariaKeep
      VB:
      - id: Varia.VariaKeep.#ctor*
        name: VariaKeep
        nameWithType: VariaKeep.VariaKeep
        qualifiedName: Varia.VariaKeep.VariaKeep
    isDefinition: true
    commentId: Overload:Varia.VariaKeep.#ctor
  Varia.VariaKeep.Apply*:
    name:
      CSharp:
      - id: Varia.VariaKeep.Apply*
        name: Apply
        nameWithType: VariaKeep.Apply
        qualifiedName: Varia.VariaKeep.Apply
      VB:
      - id: Varia.VariaKeep.Apply*
        name: Apply
        nameWithType: VariaKeep.Apply
        qualifiedName: Varia.VariaKeep.Apply
    isDefinition: true
    commentId: Overload:Varia.VariaKeep.Apply
  Varia.VariaKeep.NoApply*:
    name:
      CSharp:
      - id: Varia.VariaKeep.NoApply*
        name: NoApply
        nameWithType: VariaKeep.NoApply
        qualifiedName: Varia.VariaKeep.NoApply
      VB:
      - id: Varia.VariaKeep.NoApply*
        name: NoApply
        nameWithType: VariaKeep.NoApply
        qualifiedName: Varia.VariaKeep.NoApply
    isDefinition: true
    commentId: Overload:Varia.VariaKeep.NoApply
  Varia.VariaKeep:
    name:
      CSharp:
      - id: Varia.VariaKeep
        name: VariaKeep
        nameWithType: VariaKeep
        qualifiedName: Varia.VariaKeep
      VB:
      - id: Varia.VariaKeep
        name: VariaKeep
        nameWithType: VariaKeep
        qualifiedName: Varia.VariaKeep
    isDefinition: true
    commentId: T:Varia.VariaKeep
  Varia.RelativeTo:
    name:
      CSharp:
      - id: Varia.RelativeTo
        name: RelativeTo
        nameWithType: RelativeTo
        qualifiedName: Varia.RelativeTo
      VB:
      - id: Varia.RelativeTo
        name: RelativeTo
        nameWithType: RelativeTo
        qualifiedName: Varia.RelativeTo
    isDefinition: true
    parent: Varia
    commentId: T:Varia.RelativeTo
  Varia.VariaRandomPosition.Apply*:
    name:
      CSharp:
      - id: Varia.VariaRandomPosition.Apply*
        name: Apply
        nameWithType: VariaRandomPosition.Apply
        qualifiedName: Varia.VariaRandomPosition.Apply
      VB:
      - id: Varia.VariaRandomPosition.Apply*
        name: Apply
        nameWithType: VariaRandomPosition.Apply
        qualifiedName: Varia.VariaRandomPosition.Apply
    isDefinition: true
    commentId: Overload:Varia.VariaRandomPosition.Apply
  Varia.VariaRandomPosition:
    name:
      CSharp:
      - id: Varia.VariaRandomPosition
        name: VariaRandomPosition
        nameWithType: VariaRandomPosition
        qualifiedName: Varia.VariaRandomPosition
      VB:
      - id: Varia.VariaRandomPosition
        name: VariaRandomPosition
        nameWithType: VariaRandomPosition
        qualifiedName: Varia.VariaRandomPosition
    isDefinition: true
    commentId: T:Varia.VariaRandomPosition
  Varia.VariaRandomRotation.min:
    commentId: F:Varia.VariaRandomRotation.min
  Varia.VariaRandomRotation.max:
    commentId: F:Varia.VariaRandomRotation.max
  Varia.VariaRandomRotation.dispersionMin:
    commentId: F:Varia.VariaRandomRotation.dispersionMin
  Varia.VariaRandomRotation.dispersionMax:
    commentId: F:Varia.VariaRandomRotation.dispersionMax
  Vector3:
    name:
      CSharp:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
  Varia.VariaRandomRotation.Apply*:
    name:
      CSharp:
      - id: Varia.VariaRandomRotation.Apply*
        name: Apply
        nameWithType: VariaRandomRotation.Apply
        qualifiedName: Varia.VariaRandomRotation.Apply
      VB:
      - id: Varia.VariaRandomRotation.Apply*
        name: Apply
        nameWithType: VariaRandomRotation.Apply
        qualifiedName: Varia.VariaRandomRotation.Apply
    isDefinition: true
    commentId: Overload:Varia.VariaRandomRotation.Apply
  Varia.VariaRandomRotation:
    name:
      CSharp:
      - id: Varia.VariaRandomRotation
        name: VariaRandomRotation
        nameWithType: VariaRandomRotation
        qualifiedName: Varia.VariaRandomRotation
      VB:
      - id: Varia.VariaRandomRotation
        name: VariaRandomRotation
        nameWithType: VariaRandomRotation
        qualifiedName: Varia.VariaRandomRotation
    isDefinition: true
    commentId: T:Varia.VariaRandomRotation
  Varia.VariaRandomScale.Apply*:
    name:
      CSharp:
      - id: Varia.VariaRandomScale.Apply*
        name: Apply
        nameWithType: VariaRandomScale.Apply
        qualifiedName: Varia.VariaRandomScale.Apply
      VB:
      - id: Varia.VariaRandomScale.Apply*
        name: Apply
        nameWithType: VariaRandomScale.Apply
        qualifiedName: Varia.VariaRandomScale.Apply
    isDefinition: true
    commentId: Overload:Varia.VariaRandomScale.Apply
  Varia.VariaRandomScale:
    name:
      CSharp:
      - id: Varia.VariaRandomScale
        name: VariaRandomScale
        nameWithType: VariaRandomScale
        qualifiedName: Varia.VariaRandomScale
      VB:
      - id: Varia.VariaRandomScale
        name: VariaRandomScale
        nameWithType: VariaRandomScale
        qualifiedName: Varia.VariaRandomScale
    isDefinition: true
    commentId: T:Varia.VariaRandomScale
  Component:
    name:
      CSharp:
      - id: Component
        name: Component
        nameWithType: Component
        qualifiedName: Component
        isExternal: true
      VB:
      - id: Component
        name: Component
        nameWithType: Component
        qualifiedName: Component
        isExternal: true
    isDefinition: true
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Varia.VariaRandomTint.Apply*:
    name:
      CSharp:
      - id: Varia.VariaRandomTint.Apply*
        name: Apply
        nameWithType: VariaRandomTint.Apply
        qualifiedName: Varia.VariaRandomTint.Apply
      VB:
      - id: Varia.VariaRandomTint.Apply*
        name: Apply
        nameWithType: VariaRandomTint.Apply
        qualifiedName: Varia.VariaRandomTint.Apply
    isDefinition: true
    commentId: Overload:Varia.VariaRandomTint.Apply
  Object:
    name:
      CSharp:
      - id: Object
        name: Object
        nameWithType: Object
        qualifiedName: Object
        isExternal: true
      VB:
      - id: Object
        name: Object
        nameWithType: Object
        qualifiedName: Object
        isExternal: true
    isDefinition: true
    commentId: '!:Object'
  Varia.VariaRandomTint.GetRelativeTarget*:
    name:
      CSharp:
      - id: Varia.VariaRandomTint.GetRelativeTarget*
        name: GetRelativeTarget
        nameWithType: VariaRandomTint.GetRelativeTarget
        qualifiedName: Varia.VariaRandomTint.GetRelativeTarget
      VB:
      - id: Varia.VariaRandomTint.GetRelativeTarget*
        name: GetRelativeTarget
        nameWithType: VariaRandomTint.GetRelativeTarget
        qualifiedName: Varia.VariaRandomTint.GetRelativeTarget
    isDefinition: true
    commentId: Overload:Varia.VariaRandomTint.GetRelativeTarget
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{Color}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{Color}
  Varia.VariaRandomTint.GetBaseColor*:
    name:
      CSharp:
      - id: Varia.VariaRandomTint.GetBaseColor*
        name: GetBaseColor
        nameWithType: VariaRandomTint.GetBaseColor
        qualifiedName: Varia.VariaRandomTint.GetBaseColor
      VB:
      - id: Varia.VariaRandomTint.GetBaseColor*
        name: GetBaseColor
        nameWithType: VariaRandomTint.GetBaseColor
        qualifiedName: Varia.VariaRandomTint.GetBaseColor
    isDefinition: true
    commentId: Overload:Varia.VariaRandomTint.GetBaseColor
  Varia.VariaRandomTint.GetColor*:
    name:
      CSharp:
      - id: Varia.VariaRandomTint.GetColor*
        name: GetColor
        nameWithType: VariaRandomTint.GetColor
        qualifiedName: Varia.VariaRandomTint.GetColor
      VB:
      - id: Varia.VariaRandomTint.GetColor*
        name: GetColor
        nameWithType: VariaRandomTint.GetColor
        qualifiedName: Varia.VariaRandomTint.GetColor
    isDefinition: true
    commentId: Overload:Varia.VariaRandomTint.GetColor
  Varia.VariaRandomTint:
    name:
      CSharp:
      - id: Varia.VariaRandomTint
        name: VariaRandomTint
        nameWithType: VariaRandomTint
        qualifiedName: Varia.VariaRandomTint
      VB:
      - id: Varia.VariaRandomTint
        name: VariaRandomTint
        nameWithType: VariaRandomTint
        qualifiedName: Varia.VariaRandomTint
    isDefinition: true
    commentId: T:Varia.VariaRandomTint
  Varia.VariaSerializedValueType:
    name:
      CSharp:
      - id: Varia.VariaSerializedValueType
        name: VariaSerializedValueType
        nameWithType: VariaSerializedValueType
        qualifiedName: Varia.VariaSerializedValueType
      VB:
      - id: Varia.VariaSerializedValueType
        name: VariaSerializedValueType
        nameWithType: VariaSerializedValueType
        qualifiedName: Varia.VariaSerializedValueType
    isDefinition: true
    parent: Varia
    commentId: T:Varia.VariaSerializedValueType
  System.NonSerializedAttribute:
    name:
      CSharp:
      - id: System.NonSerializedAttribute
        name: NonSerializedAttribute
        nameWithType: NonSerializedAttribute
        qualifiedName: System.NonSerializedAttribute
        isExternal: true
      VB:
      - id: System.NonSerializedAttribute
        name: NonSerializedAttribute
        nameWithType: NonSerializedAttribute
        qualifiedName: System.NonSerializedAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.NonSerializedAttribute
  System.NonSerializedAttribute.#ctor:
    name:
      CSharp:
      - id: System.NonSerializedAttribute.#ctor
        name: NonSerializedAttribute
        nameWithType: NonSerializedAttribute.NonSerializedAttribute
        qualifiedName: System.NonSerializedAttribute.NonSerializedAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.NonSerializedAttribute.#ctor
        name: NonSerializedAttribute
        nameWithType: NonSerializedAttribute.NonSerializedAttribute
        qualifiedName: System.NonSerializedAttribute.NonSerializedAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.NonSerializedAttribute
    commentId: M:System.NonSerializedAttribute.#ctor
  Varia.VariaWeightedValue.OnBeforeSerialize*:
    name:
      CSharp:
      - id: Varia.VariaWeightedValue.OnBeforeSerialize*
        name: OnBeforeSerialize
        nameWithType: VariaWeightedValue.OnBeforeSerialize
        qualifiedName: Varia.VariaWeightedValue.OnBeforeSerialize
      VB:
      - id: Varia.VariaWeightedValue.OnBeforeSerialize*
        name: OnBeforeSerialize
        nameWithType: VariaWeightedValue.OnBeforeSerialize
        qualifiedName: Varia.VariaWeightedValue.OnBeforeSerialize
    isDefinition: true
    commentId: Overload:Varia.VariaWeightedValue.OnBeforeSerialize
  Varia.VariaWeightedValue.OnAfterDeserialize*:
    name:
      CSharp:
      - id: Varia.VariaWeightedValue.OnAfterDeserialize*
        name: OnAfterDeserialize
        nameWithType: VariaWeightedValue.OnAfterDeserialize
        qualifiedName: Varia.VariaWeightedValue.OnAfterDeserialize
      VB:
      - id: Varia.VariaWeightedValue.OnAfterDeserialize*
        name: OnAfterDeserialize
        nameWithType: VariaWeightedValue.OnAfterDeserialize
        qualifiedName: Varia.VariaWeightedValue.OnAfterDeserialize
    isDefinition: true
    commentId: Overload:Varia.VariaWeightedValue.OnAfterDeserialize
  System.Type:
    name:
      CSharp:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      VB:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Type
  Varia.VariaWeightedValue.GetDefault*:
    name:
      CSharp:
      - id: Varia.VariaWeightedValue.GetDefault*
        name: GetDefault
        nameWithType: VariaWeightedValue.GetDefault
        qualifiedName: Varia.VariaWeightedValue.GetDefault
      VB:
      - id: Varia.VariaWeightedValue.GetDefault*
        name: GetDefault
        nameWithType: VariaWeightedValue.GetDefault
        qualifiedName: Varia.VariaWeightedValue.GetDefault
    isDefinition: true
    commentId: Overload:Varia.VariaWeightedValue.GetDefault
  Varia.VariaWeightedValue.CanSerialize*:
    name:
      CSharp:
      - id: Varia.VariaWeightedValue.CanSerialize*
        name: CanSerialize
        nameWithType: VariaWeightedValue.CanSerialize
        qualifiedName: Varia.VariaWeightedValue.CanSerialize
      VB:
      - id: Varia.VariaWeightedValue.CanSerialize*
        name: CanSerialize
        nameWithType: VariaWeightedValue.CanSerialize
        qualifiedName: Varia.VariaWeightedValue.CanSerialize
    isDefinition: true
    commentId: Overload:Varia.VariaWeightedValue.CanSerialize
  Varia.VariaWeightedValue:
    name:
      CSharp:
      - id: Varia.VariaWeightedValue
        name: VariaWeightedValue
        nameWithType: VariaWeightedValue
        qualifiedName: Varia.VariaWeightedValue
      VB:
      - id: Varia.VariaWeightedValue
        name: VariaWeightedValue
        nameWithType: VariaWeightedValue
        qualifiedName: Varia.VariaWeightedValue
    isDefinition: true
    commentId: T:Varia.VariaWeightedValue
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  System.Collections.Generic.List{Varia.VariaWeightedValue}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Varia.VariaWeightedValue
        name: VariaWeightedValue
        nameWithType: VariaWeightedValue
        qualifiedName: Varia.VariaWeightedValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Varia.VariaWeightedValue
        name: VariaWeightedValue
        nameWithType: VariaWeightedValue
        qualifiedName: Varia.VariaWeightedValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Varia.VariaWeightedValue}
  Varia.VariaRandomValue.values:
    commentId: F:Varia.VariaRandomValue.values
  Varia.VariaRandomValue.Apply*:
    name:
      CSharp:
      - id: Varia.VariaRandomValue.Apply*
        name: Apply
        nameWithType: VariaRandomValue.Apply
        qualifiedName: Varia.VariaRandomValue.Apply
      VB:
      - id: Varia.VariaRandomValue.Apply*
        name: Apply
        nameWithType: VariaRandomValue.Apply
        qualifiedName: Varia.VariaRandomValue.Apply
    isDefinition: true
    commentId: Overload:Varia.VariaRandomValue.Apply
  Varia.VariaMirror:
    name:
      CSharp:
      - id: Varia.VariaMirror
        name: VariaMirror
        nameWithType: VariaMirror
        qualifiedName: Varia.VariaMirror
      VB:
      - id: Varia.VariaMirror
        name: VariaMirror
        nameWithType: VariaMirror
        qualifiedName: Varia.VariaMirror
    isDefinition: true
    parent: Varia
    commentId: T:Varia.VariaMirror
  Varia.VariaRandomValue.Mirror*:
    name:
      CSharp:
      - id: Varia.VariaRandomValue.Mirror*
        name: Mirror
        nameWithType: VariaRandomValue.Mirror
        qualifiedName: Varia.VariaRandomValue.Mirror
      VB:
      - id: Varia.VariaRandomValue.Mirror*
        name: Mirror
        nameWithType: VariaRandomValue.Mirror
        qualifiedName: Varia.VariaRandomValue.Mirror
    isDefinition: true
    commentId: Overload:Varia.VariaRandomValue.Mirror
  Varia.VariaRandomValue:
    name:
      CSharp:
      - id: Varia.VariaRandomValue
        name: VariaRandomValue
        nameWithType: VariaRandomValue
        qualifiedName: Varia.VariaRandomValue
      VB:
      - id: Varia.VariaRandomValue
        name: VariaRandomValue
        nameWithType: VariaRandomValue
        qualifiedName: Varia.VariaRandomValue
    isDefinition: true
    commentId: T:Varia.VariaRandomValue
  Varia.VariaComparison:
    name:
      CSharp:
      - id: Varia.VariaComparison
        name: VariaComparison
        nameWithType: VariaComparison
        qualifiedName: Varia.VariaComparison
      VB:
      - id: Varia.VariaComparison
        name: VariaComparison
        nameWithType: VariaComparison
        qualifiedName: Varia.VariaComparison
    isDefinition: true
    parent: Varia
    commentId: T:Varia.VariaComparison
  Varia.VariaConditionType:
    name:
      CSharp:
      - id: Varia.VariaConditionType
        name: VariaConditionType
        nameWithType: VariaConditionType
        qualifiedName: Varia.VariaConditionType
      VB:
      - id: Varia.VariaConditionType
        name: VariaConditionType
        nameWithType: VariaConditionType
        qualifiedName: Varia.VariaConditionType
    isDefinition: true
    parent: Varia
    commentId: T:Varia.VariaConditionType
  Varia.VariaCondition:
    name:
      CSharp:
      - id: Varia.VariaCondition
        name: VariaCondition
        nameWithType: VariaCondition
        qualifiedName: Varia.VariaCondition
      VB:
      - id: Varia.VariaCondition
        name: VariaCondition
        nameWithType: VariaCondition
        qualifiedName: Varia.VariaCondition
    isDefinition: true
    commentId: T:Varia.VariaCondition
  System.Collections.Generic.List{Varia.VariaCondition}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Varia.VariaCondition
        name: VariaCondition
        nameWithType: VariaCondition
        qualifiedName: Varia.VariaCondition
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Varia.VariaCondition
        name: VariaCondition
        nameWithType: VariaCondition
        qualifiedName: Varia.VariaCondition
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Varia.VariaCondition}
  Varia.VariaContext.current*:
    name:
      CSharp:
      - id: Varia.VariaContext.current*
        name: current
        nameWithType: VariaContext.current
        qualifiedName: Varia.VariaContext.current
      VB:
      - id: Varia.VariaContext.current*
        name: current
        nameWithType: VariaContext.current
        qualifiedName: Varia.VariaContext.current
    isDefinition: true
    commentId: Overload:Varia.VariaContext.current
  Varia.VariaContext.#ctor*:
    name:
      CSharp:
      - id: Varia.VariaContext.#ctor*
        name: VariaContext
        nameWithType: VariaContext.VariaContext
        qualifiedName: Varia.VariaContext.VariaContext
      VB:
      - id: Varia.VariaContext.#ctor*
        name: VariaContext
        nameWithType: VariaContext.VariaContext
        qualifiedName: Varia.VariaContext.VariaContext
    isDefinition: true
    commentId: Overload:Varia.VariaContext.#ctor
  Varia.VariaContext.depth*:
    name:
      CSharp:
      - id: Varia.VariaContext.depth*
        name: depth
        nameWithType: VariaContext.depth
        qualifiedName: Varia.VariaContext.depth
      VB:
      - id: Varia.VariaContext.depth*
        name: depth
        nameWithType: VariaContext.depth
        qualifiedName: Varia.VariaContext.depth
    isDefinition: true
    commentId: Overload:Varia.VariaContext.depth
  Varia.VariaContext.log*:
    name:
      CSharp:
      - id: Varia.VariaContext.log*
        name: log
        nameWithType: VariaContext.log
        qualifiedName: Varia.VariaContext.log
      VB:
      - id: Varia.VariaContext.log*
        name: log
        nameWithType: VariaContext.log
        qualifiedName: Varia.VariaContext.log
    isDefinition: true
    commentId: Overload:Varia.VariaContext.log
  Varia.VariaContext.recordUndo*:
    name:
      CSharp:
      - id: Varia.VariaContext.recordUndo*
        name: recordUndo
        nameWithType: VariaContext.recordUndo
        qualifiedName: Varia.VariaContext.recordUndo
      VB:
      - id: Varia.VariaContext.recordUndo*
        name: recordUndo
        nameWithType: VariaContext.recordUndo
        qualifiedName: Varia.VariaContext.recordUndo
    isDefinition: true
    commentId: Overload:Varia.VariaContext.recordUndo
  Random.State:
    name:
      CSharp:
      - id: Random.State
        name: Random.State
        nameWithType: Random.State
        qualifiedName: Random.State
        isExternal: true
      VB:
      - id: Random.State
        name: Random.State
        nameWithType: Random.State
        qualifiedName: Random.State
        isExternal: true
    isDefinition: true
    commentId: '!:Random.State'
  Transform:
    name:
      CSharp:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
  Varia.VariaContext.Instantiate*:
    name:
      CSharp:
      - id: Varia.VariaContext.Instantiate*
        name: Instantiate
        nameWithType: VariaContext.Instantiate
        qualifiedName: Varia.VariaContext.Instantiate
      VB:
      - id: Varia.VariaContext.Instantiate*
        name: Instantiate
        nameWithType: VariaContext.Instantiate
        qualifiedName: Varia.VariaContext.Instantiate
    isDefinition: true
    commentId: Overload:Varia.VariaContext.Instantiate
  Quaternion:
    name:
      CSharp:
      - id: Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      VB:
      - id: Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
    isDefinition: true
  Varia.VariaContext.Freeze*:
    name:
      CSharp:
      - id: Varia.VariaContext.Freeze*
        name: Freeze
        nameWithType: VariaContext.Freeze
        qualifiedName: Varia.VariaContext.Freeze
      VB:
      - id: Varia.VariaContext.Freeze*
        name: Freeze
        nameWithType: VariaContext.Freeze
        qualifiedName: Varia.VariaContext.Freeze
    isDefinition: true
    commentId: Overload:Varia.VariaContext.Freeze
  Type:
    name:
      CSharp:
      - id: Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
      VB:
      - id: Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
    isDefinition: true
  Varia.VariaProperty:
    name:
      CSharp:
      - id: Varia.VariaProperty
        name: VariaProperty
        nameWithType: VariaProperty
        qualifiedName: Varia.VariaProperty
      VB:
      - id: Varia.VariaProperty
        name: VariaProperty
        nameWithType: VariaProperty
        qualifiedName: Varia.VariaProperty
    isDefinition: true
    commentId: T:Varia.VariaProperty
  Action`2:
    name:
      CSharp:
      - id: Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Action`2'
  Action{System.Object,System.Object}:
    name:
      CSharp:
      - id: Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`2
    commentId: '!:Action{System.Object,System.Object}'
  Func`2:
    name:
      CSharp:
      - id: Func`2
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Func`2
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Func`2'
  Func{System.Object,System.Object}:
    name:
      CSharp:
      - id: Func`2
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Func`2
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Func`2
    commentId: '!:Func{System.Object,System.Object}'
  System.Collections.Generic.List{Varia.VariaProperty}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Varia.VariaProperty
        name: VariaProperty
        nameWithType: VariaProperty
        qualifiedName: Varia.VariaProperty
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Varia.VariaProperty
        name: VariaProperty
        nameWithType: VariaProperty
        qualifiedName: Varia.VariaProperty
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Varia.VariaProperty}
  Varia.VariaReflection.GetProperties*:
    name:
      CSharp:
      - id: Varia.VariaReflection.GetProperties*
        name: GetProperties
        nameWithType: VariaReflection.GetProperties
        qualifiedName: Varia.VariaReflection.GetProperties
      VB:
      - id: Varia.VariaReflection.GetProperties*
        name: GetProperties
        nameWithType: VariaReflection.GetProperties
        qualifiedName: Varia.VariaReflection.GetProperties
    isDefinition: true
    commentId: Overload:Varia.VariaReflection.GetProperties
  Varia.VariaReflection.SetValue*:
    name:
      CSharp:
      - id: Varia.VariaReflection.SetValue*
        name: SetValue
        nameWithType: VariaReflection.SetValue
        qualifiedName: Varia.VariaReflection.SetValue
      VB:
      - id: Varia.VariaReflection.SetValue*
        name: SetValue
        nameWithType: VariaReflection.SetValue
        qualifiedName: Varia.VariaReflection.SetValue
    isDefinition: true
    commentId: Overload:Varia.VariaReflection.SetValue
  Varia.VariaReflection.GetValue*:
    name:
      CSharp:
      - id: Varia.VariaReflection.GetValue*
        name: GetValue
        nameWithType: VariaReflection.GetValue
        qualifiedName: Varia.VariaReflection.GetValue
      VB:
      - id: Varia.VariaReflection.GetValue*
        name: GetValue
        nameWithType: VariaReflection.GetValue
        qualifiedName: Varia.VariaReflection.GetValue
    isDefinition: true
    commentId: Overload:Varia.VariaReflection.GetValue
  Varia.VariaReflection.EvalExpressionOrThrow*:
    name:
      CSharp:
      - id: Varia.VariaReflection.EvalExpressionOrThrow*
        name: EvalExpressionOrThrow
        nameWithType: VariaReflection.EvalExpressionOrThrow
        qualifiedName: Varia.VariaReflection.EvalExpressionOrThrow
      VB:
      - id: Varia.VariaReflection.EvalExpressionOrThrow*
        name: EvalExpressionOrThrow
        nameWithType: VariaReflection.EvalExpressionOrThrow
        qualifiedName: Varia.VariaReflection.EvalExpressionOrThrow
    isDefinition: true
    commentId: Overload:Varia.VariaReflection.EvalExpressionOrThrow
  Varia.VariaReflection.EvalExpression*:
    name:
      CSharp:
      - id: Varia.VariaReflection.EvalExpression*
        name: EvalExpression
        nameWithType: VariaReflection.EvalExpression
        qualifiedName: Varia.VariaReflection.EvalExpression
      VB:
      - id: Varia.VariaReflection.EvalExpression*
        name: EvalExpression
        nameWithType: VariaReflection.EvalExpression
        qualifiedName: Varia.VariaReflection.EvalExpression
    isDefinition: true
    commentId: Overload:Varia.VariaReflection.EvalExpression
  Varia.VariaReflection:
    name:
      CSharp:
      - id: Varia.VariaReflection
        name: VariaReflection
        nameWithType: VariaReflection
        qualifiedName: Varia.VariaReflection
      VB:
      - id: Varia.VariaReflection
        name: VariaReflection
        nameWithType: VariaReflection
        qualifiedName: Varia.VariaReflection
    isDefinition: true
    commentId: T:Varia.VariaReflection
  Varia.VariaUtils.Instantiate*:
    name:
      CSharp:
      - id: Varia.VariaUtils.Instantiate*
        name: Instantiate
        nameWithType: VariaUtils.Instantiate
        qualifiedName: Varia.VariaUtils.Instantiate
      VB:
      - id: Varia.VariaUtils.Instantiate*
        name: Instantiate
        nameWithType: VariaUtils.Instantiate
        qualifiedName: Varia.VariaUtils.Instantiate
    isDefinition: true
    commentId: Overload:Varia.VariaUtils.Instantiate
  Varia.VariaUtils.GetNamePath*:
    name:
      CSharp:
      - id: Varia.VariaUtils.GetNamePath*
        name: GetNamePath
        nameWithType: VariaUtils.GetNamePath
        qualifiedName: Varia.VariaUtils.GetNamePath
      VB:
      - id: Varia.VariaUtils.GetNamePath*
        name: GetNamePath
        nameWithType: VariaUtils.GetNamePath
        qualifiedName: Varia.VariaUtils.GetNamePath
    isDefinition: true
    commentId: Overload:Varia.VariaUtils.GetNamePath
  Varia.VariaUtils:
    name:
      CSharp:
      - id: Varia.VariaUtils
        name: VariaUtils
        nameWithType: VariaUtils
        qualifiedName: Varia.VariaUtils
      VB:
      - id: Varia.VariaUtils
        name: VariaUtils
        nameWithType: VariaUtils
        qualifiedName: Varia.VariaUtils
    isDefinition: true
    commentId: T:Varia.VariaUtils
